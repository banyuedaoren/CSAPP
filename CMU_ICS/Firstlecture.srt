1
00:00:00,000 --> 00:00:06,899
hello everyone I'd like to welcome you

2
00:00:02,879 --> 00:00:10,620
all to this fall's this term's instance

3
00:00:06,899 --> 00:00:14,700
of this course is officially either 15

4
00:00:10,620 --> 00:00:16,640
to 13 from computer science or 18 to 13

5
00:00:14,700 --> 00:00:19,140
from Electrical and Computer Engineering

6
00:00:16,640 --> 00:00:21,539
but a large number the people enrolled

7
00:00:19,140 --> 00:00:26,070
in this course are in one called 513

8
00:00:21,539 --> 00:00:27,779
which is for graduate students and to be

9
00:00:26,070 --> 00:00:29,699
totally honest you're not supposed to be

10
00:00:27,779 --> 00:00:32,880
here because you're supposed to watch

11
00:00:29,699 --> 00:00:36,000
the videos the lectures by video later

12
00:00:32,880 --> 00:00:37,350
but we're not checking any card so I

13
00:00:36,000 --> 00:00:42,000
don't really know who you are

14
00:00:37,350 --> 00:00:44,250
Oh anyways this course is as you can see

15
00:00:42,000 --> 00:00:48,440
a very popular course on campus we have

16
00:00:44,250 --> 00:00:51,539
over 700 700 600 shouldn't exaggerate

17
00:00:48,440 --> 00:00:54,600
students on campus enrolled in one of

18
00:00:51,539 --> 00:00:56,340
those three versions of the course which

19
00:00:54,600 --> 00:01:00,149
if you think about a university of the

20
00:00:56,340 --> 00:01:05,119
size of CMU that's like about five

21
00:01:00,149 --> 00:01:10,439
percent of the total student population

22
00:01:05,119 --> 00:01:14,070
so we're very glad to have you here

23
00:01:10,439 --> 00:01:17,820
and this game is too high I think we

24
00:01:14,070 --> 00:01:22,979
overdid the game try that that's better

25
00:01:17,820 --> 00:01:24,990
um so my name is Randy Bryant and my

26
00:01:22,979 --> 00:01:27,509
co-instructor is Dave O'Halloran and

27
00:01:24,990 --> 00:01:30,520
those names might be familiar if you

28
00:01:27,509 --> 00:01:33,430
have been to the bookstore

29
00:01:30,520 --> 00:01:37,000
because the book was written by us and

30
00:01:33,430 --> 00:01:43,240
we actually wrote this book we started

31
00:01:37,000 --> 00:01:45,070
to 13 as a course in 1998 ah and I know

32
00:01:43,240 --> 00:01:48,520
that your children them and all that

33
00:01:45,070 --> 00:01:50,950
stuff but out of response for a new type

34
00:01:48,520 --> 00:01:53,560
of course that you'll see today that

35
00:01:50,950 --> 00:01:56,920
sort of gives people a in-depth

36
00:01:53,560 --> 00:01:58,810
understanding of systems but more from a

37
00:01:56,920 --> 00:02:00,490
high-level or programmers perspective

38
00:01:58,810 --> 00:02:03,850
and we'll talk some about the philosophy

39
00:02:00,490 --> 00:02:06,750
of the course later so this book has

40
00:02:03,850 --> 00:02:10,209
used Co just came out its third edition

41
00:02:06,750 --> 00:02:13,510
last March and that's the required text

42
00:02:10,209 --> 00:02:16,269
for the course and there is nothing you

43
00:02:13,510 --> 00:02:19,390
can do to avoid buying that book and

44
00:02:16,269 --> 00:02:21,640
it's not because we're greedy actually

45
00:02:19,390 --> 00:02:25,000
we take the money we get from royalty

46
00:02:21,640 --> 00:02:27,030
for students in this course or any CMU

47
00:02:25,000 --> 00:02:29,290
course and we donate it to CMU

48
00:02:27,030 --> 00:02:31,690
so we're not actually making any money

49
00:02:29,290 --> 00:02:34,290
out of you buying the book but it's a

50
00:02:31,690 --> 00:02:38,320
simple reality that the new version is

51
00:02:34,290 --> 00:02:40,510
different than the old we expect you to

52
00:02:38,320 --> 00:02:44,230
be using the new version there are no

53
00:02:40,510 --> 00:02:46,840
electronic copies there are no pirated

54
00:02:44,230 --> 00:02:49,600
versions so you basically have to buy

55
00:02:46,840 --> 00:02:53,170
the book but and I don't really

56
00:02:49,600 --> 00:02:55,930
apologize to that because I know you or

57
00:02:53,170 --> 00:02:57,760
your parents do somebody's paying a lot

58
00:02:55,930 --> 00:03:00,010
of money for you to be here and so the

59
00:02:57,760 --> 00:03:03,850
price of the book is really a relatively

60
00:03:00,010 --> 00:03:06,400
small amount relative to that and this

61
00:03:03,850 --> 00:03:09,160
course by the way is not some courses

62
00:03:06,400 --> 00:03:10,540
there's oh yeah this book you might want

63
00:03:09,160 --> 00:03:12,340
to look at it once in a while but

64
00:03:10,540 --> 00:03:15,340
actually the course has nothing to do

65
00:03:12,340 --> 00:03:17,680
with it this course the book and the

66
00:03:15,340 --> 00:03:20,590
courts are one they're very tied

67
00:03:17,680 --> 00:03:24,549
together there'll be parts of the book

68
00:03:20,590 --> 00:03:26,290
that we don't go into all the details

69
00:03:24,549 --> 00:03:27,850
that are in the book sometimes but we

70
00:03:26,290 --> 00:03:32,950
expect you to be able to figure it out

71
00:03:27,850 --> 00:03:35,200
and so really the course in the book are

72
00:03:32,950 --> 00:03:37,209
tied together and they very much the the

73
00:03:35,200 --> 00:03:39,310
progress of the course the topics

74
00:03:37,209 --> 00:03:42,150
covered how it's covered everything

75
00:03:39,310 --> 00:03:42,150
about it is

76
00:03:43,180 --> 00:03:48,159
consistent with the book and we wrote

77
00:03:45,519 --> 00:03:52,450
the book because of the course think of

78
00:03:48,159 --> 00:03:54,159
them as course notes so and the reason

79
00:03:52,450 --> 00:03:55,689
why we are teaching this term by the way

80
00:03:54,159 --> 00:03:58,150
we haven't taught together in several

81
00:03:55,689 --> 00:04:01,120
years but because this is the first roll

82
00:03:58,150 --> 00:04:03,069
out of this book and not only is it

83
00:04:01,120 --> 00:04:06,189
being used here but it's actually used

84
00:04:03,069 --> 00:04:09,700
by about 250 schools around the world

85
00:04:06,189 --> 00:04:13,840
and many of those people are also going

86
00:04:09,700 --> 00:04:15,909
through the same activities of teaching

87
00:04:13,840 --> 00:04:18,699
for it from this new edition for the

88
00:04:15,909 --> 00:04:20,620
first time and so we wanted to make sure

89
00:04:18,699 --> 00:04:23,050
all the material for the course was sort

90
00:04:20,620 --> 00:04:26,740
of put in order and things because other

91
00:04:23,050 --> 00:04:29,440
universities and other colleges use this

92
00:04:26,740 --> 00:04:33,280
material of the supporting material

93
00:04:29,440 --> 00:04:36,010
we've developed so that's the course and

94
00:04:33,280 --> 00:04:38,830
today is the first election we're sort

95
00:04:36,010 --> 00:04:40,780
of doing a tag team here I'll talk the

96
00:04:38,830 --> 00:04:43,479
high level what the course is about what

97
00:04:40,780 --> 00:04:49,780
the main themes are and Dave will talk

98
00:04:43,479 --> 00:04:55,810
more about the logistics so we refer the

99
00:04:49,780 --> 00:04:59,159
the saying we have when the very first

100
00:04:55,810 --> 00:05:03,010
time I typed the number of this course

101
00:04:59,159 --> 00:05:05,530
into a text editor I realized I have

102
00:05:03,010 --> 00:05:08,590
typed those five digits many times in my

103
00:05:05,530 --> 00:05:11,409
career because it's the zip code of CMU

104
00:05:08,590 --> 00:05:19,419
one five two one three so that's where

105
00:05:11,409 --> 00:05:22,090
we come up with the same so um there's a

106
00:05:19,419 --> 00:05:24,580
few things about this course for the

107
00:05:22,090 --> 00:05:26,560
most part you know in your normal

108
00:05:24,580 --> 00:05:28,659
undergraduate curriculum when you've

109
00:05:26,560 --> 00:05:31,210
learned programming you've been very

110
00:05:28,659 --> 00:05:33,610
much separated from the realities of the

111
00:05:31,210 --> 00:05:38,800
Machine you just think about code just

112
00:05:33,610 --> 00:05:43,780
you put some text into some little box

113
00:05:38,800 --> 00:05:45,580
somehow and outcomes of behavior that it

114
00:05:43,780 --> 00:05:48,460
hopefully is what you intended the

115
00:05:45,580 --> 00:05:50,289
program to do the purpose of this course

116
00:05:48,460 --> 00:05:53,139
is to give you enough understanding of

117
00:05:50,289 --> 00:05:56,900
what that box is doing when it executes

118
00:05:53,139 --> 00:06:00,410
your code and through that to help you

119
00:05:56,900 --> 00:06:04,759
of become better at what you're trying

120
00:06:00,410 --> 00:06:07,009
to do so some of the outcomes is there's

121
00:06:04,759 --> 00:06:09,500
really two types of outcomes from this

122
00:06:07,009 --> 00:06:11,300
course one is that if this is the only

123
00:06:09,500 --> 00:06:13,970
systems course you ever take in your

124
00:06:11,300 --> 00:06:16,820
whole life you will get useful material

125
00:06:13,970 --> 00:06:20,509
from it you will learn tools tricks

126
00:06:16,820 --> 00:06:23,110
methods that will help you if you ever

127
00:06:20,509 --> 00:06:25,580
are in involved in software development

128
00:06:23,110 --> 00:06:29,090
large-scale software engineering

129
00:06:25,580 --> 00:06:32,690
projects systems hardware design any

130
00:06:29,090 --> 00:06:35,600
aspect of computer technology this will

131
00:06:32,690 --> 00:06:37,940
help you be better at what you do you'll

132
00:06:35,600 --> 00:06:40,340
understand what programs do how they

133
00:06:37,940 --> 00:06:42,740
work what the machines that support them

134
00:06:40,340 --> 00:06:44,389
do why sometimes they work really well

135
00:06:42,740 --> 00:06:48,590
and why sometimes they don't work so

136
00:06:44,389 --> 00:06:50,900
well it also is intended as a sort of

137
00:06:48,590 --> 00:06:55,340
stepping stone into a whole number of

138
00:06:50,900 --> 00:06:58,280
other courses at CMU that will give you

139
00:06:55,340 --> 00:07:00,259
more in-depth understanding of computer

140
00:06:58,280 --> 00:07:03,080
technology but our sort of specialized

141
00:07:00,259 --> 00:07:05,979
by topical area whether it's computer

142
00:07:03,080 --> 00:07:09,500
networking or operating systems or

143
00:07:05,979 --> 00:07:11,120
embedded systems where you'll take the

144
00:07:09,500 --> 00:07:13,970
sort of ideas from this course and be

145
00:07:11,120 --> 00:07:16,310
able to then learn in a somewhat

146
00:07:13,970 --> 00:07:20,270
narrower but deeper sense what's really

147
00:07:16,310 --> 00:07:22,430
going on and so it really is trying to

148
00:07:20,270 --> 00:07:24,979
serve those two goals of making you more

149
00:07:22,430 --> 00:07:27,409
effective giving you useful ideas and

150
00:07:24,979 --> 00:07:30,860
tools right away but also preparing you

151
00:07:27,409 --> 00:07:33,949
for later courses so one way we talk

152
00:07:30,860 --> 00:07:36,199
about this instead of what why what kind

153
00:07:33,949 --> 00:07:39,800
of stuff will you learn from this course

154
00:07:36,199 --> 00:07:42,830
is to go through a series of what we

155
00:07:39,800 --> 00:07:46,159
call great realities places where sort

156
00:07:42,830 --> 00:07:48,289
of computers meet up real-life computers

157
00:07:46,159 --> 00:07:50,479
get meet up against your expectations

158
00:07:48,289 --> 00:07:52,460
and maybe they're not quite the same so

159
00:07:50,479 --> 00:07:53,840
one of them is and the first part of the

160
00:07:52,460 --> 00:07:55,789
course is going to take a fairly

161
00:07:53,840 --> 00:07:58,430
detailed look how numbers are

162
00:07:55,789 --> 00:08:00,740
represented in computers and you'll

163
00:07:58,430 --> 00:08:03,169
learn some things that are on one hand

164
00:08:00,740 --> 00:08:04,639
surprising and another hand will start

165
00:08:03,169 --> 00:08:09,730
to make sense when you understand it

166
00:08:04,639 --> 00:08:15,140
better so a simple case is

167
00:08:09,730 --> 00:08:16,520
for numbers I don't know when it was but

168
00:08:15,140 --> 00:08:18,950
it was probably in about eighth grade

169
00:08:16,520 --> 00:08:21,170
algebra that I learned that if you

170
00:08:18,950 --> 00:08:24,050
square a number it will be at least zero

171
00:08:21,170 --> 00:08:27,830
if it's not an imaginary number so a

172
00:08:24,050 --> 00:08:29,990
either an integer or a real number you'd

173
00:08:27,830 --> 00:08:34,550
expect to square it and it to be a

174
00:08:29,990 --> 00:08:37,159
positive value or perhaps zero right and

175
00:08:34,550 --> 00:08:38,990
that's actually generally true with

176
00:08:37,159 --> 00:08:44,450
floats a representation of floating

177
00:08:38,990 --> 00:08:47,030
point numbers but with integers or int

178
00:08:44,450 --> 00:08:50,450
you know the computer representation of

179
00:08:47,030 --> 00:08:52,730
integers it's not so clear so for

180
00:08:50,450 --> 00:08:56,240
example if you square 40,000 on most

181
00:08:52,730 --> 00:09:00,260
computers then you'll get whatever that

182
00:08:56,240 --> 00:09:04,670
should be as you'd expect but what if

183
00:09:00,260 --> 00:09:07,850
you square 50,000 so you could do this

184
00:09:04,670 --> 00:09:10,790
in your head but I actually built into

185
00:09:07,850 --> 00:09:13,960
this laptop is a computer so I'm going

186
00:09:10,790 --> 00:09:13,960
to go ahead and use it

187
00:09:16,720 --> 00:09:21,339
we just size it a little bit

188
00:09:23,780 --> 00:09:43,910
and use a tool which on UNIX systems is

189
00:09:30,470 --> 00:09:47,900
called know what's going on before here

190
00:09:43,910 --> 00:09:51,890
we are on Linux systems is called gdb

191
00:09:47,900 --> 00:09:53,300
but on a Macintosh OS X it's called L LD

192
00:09:51,890 --> 00:09:55,220
B but they're pretty much the same

193
00:09:53,300 --> 00:09:58,730
program you will get to know this

194
00:09:55,220 --> 00:10:02,860
program really really well this terms so

195
00:09:58,730 --> 00:10:09,650
like I said a few square 40-thousand

196
00:10:02,860 --> 00:10:18,710
you'll get what you'd expect but let's

197
00:10:09,650 --> 00:10:20,630
change this to 50,000 and you get a very

198
00:10:18,710 --> 00:10:22,790
peculiar number that doesn't look

199
00:10:20,630 --> 00:10:24,890
anything like you'd expect 50,000

200
00:10:22,790 --> 00:10:29,060
squared to be and in fact it's negative

201
00:10:24,890 --> 00:10:31,160
and so that might just seem like well

202
00:10:29,060 --> 00:10:34,300
there must be a mistake or something no

203
00:10:31,160 --> 00:10:37,250
that that's just the way it is because

204
00:10:34,300 --> 00:10:40,820
this computer is expecting numbers to be

205
00:10:37,250 --> 00:10:44,240
represented as 32-bit values and the bit

206
00:10:40,820 --> 00:10:46,550
pattern that you get when you do this

207
00:10:44,240 --> 00:10:49,100
multiplication happens to be the

208
00:10:46,550 --> 00:10:52,990
representation of a negative number so

209
00:10:49,100 --> 00:10:54,830
that's a an example of where your normal

210
00:10:52,990 --> 00:10:58,839
expectations about integer arithmetic

211
00:10:54,830 --> 00:11:09,700
may or may not hold on the other hand

212
00:10:58,839 --> 00:11:13,130
there are some places like if I try to

213
00:11:09,700 --> 00:11:15,740
do the same thing multiplying 300 by 400

214
00:11:13,130 --> 00:11:17,510
by 500 by 600 then all of a sudden I

215
00:11:15,740 --> 00:11:19,970
also get a number that clearly is not

216
00:11:17,510 --> 00:11:22,940
what you'd expect because the same thing

217
00:11:19,970 --> 00:11:24,920
has happened I've gotten an overflow it

218
00:11:22,940 --> 00:11:26,780
happens that it's overflowed to a value

219
00:11:24,920 --> 00:11:29,390
that's positive not negative but it

220
00:11:26,780 --> 00:11:32,330
still is obviously not the integer

221
00:11:29,390 --> 00:11:35,450
product of those four numbers on the

222
00:11:32,330 --> 00:11:37,139
other hand one thing you'll find is even

223
00:11:35,450 --> 00:11:43,160
though this arithmetic is now

224
00:11:37,139 --> 00:11:46,559
not a normal sort of integer arithmetic

225
00:11:43,160 --> 00:11:51,439
it actually has some well-behaved

226
00:11:46,559 --> 00:11:51,439
properties so for example if you look at

227
00:11:53,149 --> 00:11:58,739
what I've done is I just moved the 300

228
00:11:56,369 --> 00:12:01,139
around from the beginning of the product

229
00:11:58,739 --> 00:12:03,179
to the end of the product and so now if

230
00:12:01,139 --> 00:12:05,249
you think about how associativity and

231
00:12:03,179 --> 00:12:07,199
community works I'm basically

232
00:12:05,249 --> 00:12:09,629
multiplying these four numbers in a

233
00:12:07,199 --> 00:12:13,350
different order but what you see is you

234
00:12:09,629 --> 00:12:15,299
get the same funny-looking result no

235
00:12:13,350 --> 00:12:17,220
matter how you do it so what you can say

236
00:12:15,299 --> 00:12:19,279
from this is integer arithmetic is

237
00:12:17,220 --> 00:12:21,809
commutative and associative so it obeys

238
00:12:19,279 --> 00:12:22,439
some of the conventional mathematical

239
00:12:21,809 --> 00:12:25,559
properties

240
00:12:22,439 --> 00:12:33,809
it just isn't what you'd expect it to be

241
00:12:25,559 --> 00:12:43,040
it's not a a normal sort of mathematical

242
00:12:33,809 --> 00:12:43,040
integer arithmetic so the cartoon here

243
00:12:43,309 --> 00:12:51,949
shows an example that's a similar

244
00:12:47,600 --> 00:12:51,949
possibility we get to it

245
00:12:57,980 --> 00:13:04,930
oh I guess it comes at the end I don't

246
00:13:02,090 --> 00:13:07,730
know the next question is is a addition

247
00:13:04,930 --> 00:13:10,190
associative right can you order the

248
00:13:07,730 --> 00:13:12,500
numbers and then see probably might have

249
00:13:10,190 --> 00:13:14,540
figured bolted and the integer

250
00:13:12,500 --> 00:13:17,660
arithmetic even though as this potential

251
00:13:14,540 --> 00:13:21,260
for overflow it is associative and it's

252
00:13:17,660 --> 00:13:24,740
commutative too but for floats it's not

253
00:13:21,260 --> 00:13:26,420
really quite the same because the range

254
00:13:24,740 --> 00:13:29,180
of values you can get in floating

255
00:13:26,420 --> 00:13:31,700
pointers so extreme that some numbers

256
00:13:29,180 --> 00:13:33,980
kind of disappear on you so the example

257
00:13:31,700 --> 00:13:37,040
I'll show without having to use a

258
00:13:33,980 --> 00:13:38,840
computer to do it is if you take a big

259
00:13:37,040 --> 00:13:41,540
number and subtract it from itself

260
00:13:38,840 --> 00:13:47,650
you'll get zero so if you add that to

261
00:13:41,540 --> 00:13:50,770
3.14 you'll get 3.14 but if you take

262
00:13:47,650 --> 00:13:55,010
those two numbers and you reorder the

263
00:13:50,770 --> 00:13:58,010
how you combine them so that that 3.14

264
00:13:55,010 --> 00:14:00,200
compared to a minus 10 to the 20th is so

265
00:13:58,010 --> 00:14:04,880
insignificant that that result gets

266
00:14:00,200 --> 00:14:07,160
turned into minus 10 to the 20th and you

267
00:14:04,880 --> 00:14:09,680
add that to one 10 to the 20th and you

268
00:14:07,160 --> 00:14:15,710
end up with zero so it's not associative

269
00:14:09,680 --> 00:14:18,140
and so what you see is the both these

270
00:14:15,710 --> 00:14:20,300
number systems have some peculiarities

271
00:14:18,140 --> 00:14:22,160
and it all comes down to the fact that

272
00:14:20,300 --> 00:14:24,680
they use finite representations of

273
00:14:22,160 --> 00:14:28,130
things that are potentially infinite in

274
00:14:24,680 --> 00:14:31,010
their expanse and so there's some

275
00:14:28,130 --> 00:14:33,650
compromises in how those work and what

276
00:14:31,010 --> 00:14:36,710
the compromise is you can overflow an

277
00:14:33,650 --> 00:14:38,540
integer and run out of room and in

278
00:14:36,710 --> 00:14:40,460
floating point numbers you have roundoff

279
00:14:38,540 --> 00:14:43,220
problems where you should have drop the

280
00:14:40,460 --> 00:14:45,530
digits that are significant you can also

281
00:14:43,220 --> 00:14:49,730
overflow floating points but the more

282
00:14:45,530 --> 00:14:51,860
common problem is round of so this is

283
00:14:49,730 --> 00:14:53,990
shown in this cartoon this idea of

284
00:14:51,860 --> 00:14:57,170
overflow of somebody counting sheep

285
00:14:53,990 --> 00:15:00,160
which in the u.s. is in English language

286
00:14:57,170 --> 00:15:05,660
at least a way to fall asleep and when

287
00:15:00,160 --> 00:15:09,590
he or she goes from 32,767 and then

288
00:15:05,660 --> 00:15:11,510
increment set by one gets minus 32,768

289
00:15:09,590 --> 00:15:13,640
and we'll see

290
00:15:11,510 --> 00:15:16,670
exactly why that happens but basically

291
00:15:13,640 --> 00:15:18,740
the numbers are going up to the largest

292
00:15:16,670 --> 00:15:20,180
value can represent and then when it

293
00:15:18,740 --> 00:15:26,690
goes one more it becomes a negative

294
00:15:20,180 --> 00:15:29,840
number so these are really important

295
00:15:26,690 --> 00:15:31,960
under things to understand I mean 90% of

296
00:15:29,840 --> 00:15:34,280
the time maybe you can just get by

297
00:15:31,960 --> 00:15:36,170
writing programs and not worrying about

298
00:15:34,280 --> 00:15:39,800
whether your numbers are going to exceed

299
00:15:36,170 --> 00:15:41,720
their possible range but they sometimes

300
00:15:39,800 --> 00:15:44,510
when this could be really important if

301
00:15:41,720 --> 00:15:47,720
you're like you know controlling a

302
00:15:44,510 --> 00:15:51,440
rocket you really don't want the

303
00:15:47,720 --> 00:15:54,500
positive thrust to become negative or

304
00:15:51,440 --> 00:15:56,600
something like that so you can see you

305
00:15:54,500 --> 00:15:58,870
there this could be an important

306
00:15:56,600 --> 00:16:01,370
consideration similarly there's

307
00:15:58,870 --> 00:16:03,800
well-known instances of security

308
00:16:01,370 --> 00:16:06,980
vulnerabilities where somebody wrote

309
00:16:03,800 --> 00:16:09,680
code that sort of expected a positive

310
00:16:06,980 --> 00:16:11,420
number in some place and a clever person

311
00:16:09,680 --> 00:16:13,340
figured out if I supply a negative

312
00:16:11,420 --> 00:16:15,770
number I can fool the system and get it

313
00:16:13,340 --> 00:16:18,230
to do bad things so these are the kind

314
00:16:15,770 --> 00:16:19,490
of corner cases that you need to

315
00:16:18,230 --> 00:16:21,740
understand better if you're either

316
00:16:19,490 --> 00:16:23,150
working in programs where it's really

317
00:16:21,740 --> 00:16:25,760
really important that it worked

318
00:16:23,150 --> 00:16:28,640
correctly or you're really worried about

319
00:16:25,760 --> 00:16:30,800
security vulnerabilities anytime you

320
00:16:28,640 --> 00:16:33,220
have possible four corner cases you have

321
00:16:30,800 --> 00:16:35,720
to understand these nuances better a

322
00:16:33,220 --> 00:16:38,420
similarly for floating-point if you're
同样的，对于浮点数也是如此
323
00:16:35,720 --> 00:16:40,460
going to use floating-point for serious
如果你需要在一些非常重要的场合使用浮点数的话
324
00:16:38,420 --> 00:16:43,780
computation whether it's scientific
不管是科学研究还是设计桥梁或是核电站
325
00:16:40,460 --> 00:16:46,610
research or for designing bridges or

326
00:16:43,780 --> 00:16:47,810
nuclear power plants or something you

327
00:16:46,610 --> 00:16:51,500
better understand what the
你都最好要理解机器中这些数到底是什么样子的
328
00:16:47,810 --> 00:16:53,360
characteristics are so that's our first
所以机器中数的表示就是我们的第一章的内容
329
00:16:51,500 --> 00:16:56,330
one and we'll spend a couple weeks
我们将会花上几周时间讨论数和他们的不同表示的特性。
330
00:16:53,360 --> 00:16:57,830
talking about numbers and number of

331
00:16:56,330 --> 00:17:01,310
representations and their properties

332
00:16:57,830 --> 00:17:03,410
here the second is we're going to spend
我们ICS课程的第二部分是
333
00:17:01,310 --> 00:17:05,420
a lot of time in this course learning
我们会花很多时间学习在机器层面的编程
334
00:17:03,410 --> 00:17:08,270
about machine level programming meaning
换句话说，我们将会研究在机器中真正被执行的指令
335
00:17:05,420 --> 00:17:10,699
what the instructions are that actually

336
00:17:08,270 --> 00:17:12,890
get executed by the computer and that

337
00:17:10,699 --> 00:17:15,980
can be described in assembly language
这些指令可以被汇编语言描述
338
00:17:12,890 --> 00:17:18,170
which is a text version of it or an
汇编语言是这些指令的文本形式（助记符）
339
00:17:15,980 --> 00:17:21,199
object code which is the actual bit
汇编语言也可以说是机器指令对应字节码的object code
340
00:17:18,170 --> 00:17:23,959
level binary encoding of instructions

341
00:17:21,199 --> 00:17:24,630
and we'll learn a fair bit about that
我们也会涉猎一点编译相关的知识
342
00:17:23,959 --> 00:17:27,959
and spend
也就是你写的代码是如何转换成为机器级代码的
343
00:17:24,630 --> 00:17:31,620
amount of time seeing how code that you

344
00:17:27,959 --> 00:17:33,660
write in aussie gets turned into machine

345
00:17:31,620 --> 00:17:36,450
code and how that gets executed on the

346
00:17:33,660 --> 00:17:38,550
machine one thing I'll say is that
其实，在以前这门课是要求大家很系统的学习汇编语言的
347
00:17:36,450 --> 00:17:41,420
historically courses like this would

348
00:17:38,550 --> 00:17:45,870
teach assembly code by having you write
以前的学生得用汇编语言写程序实现一些功能
349
00:17:41,420 --> 00:17:47,640
programs in assembly that do various

350
00:17:45,870 --> 00:17:49,260
things not usually very interesting
但是这不是那么有趣因为汇编语言写程序太烦了
351
00:17:47,640 --> 00:17:51,540
because it's a lot of work to write

352
00:17:49,260 --> 00:17:53,310
assembly program this course is much

353
00:17:51,540 --> 00:17:56,010
more about taking the assembly code
而ICS更关注由C编译器生成的汇编语言代码
354
00:17:53,310 --> 00:17:58,020
that's been generated by a compiler a C

355
00:17:56,010 --> 00:17:59,850
compiler and looking at it and
你们需要试着去理解生成的汇编代码
356
00:17:58,020 --> 00:18:02,280
understanding it that's a different set
这和你们自己去写汇编程序是两码事（轻松多了）
357
00:17:59,850 --> 00:18:07,230
of skills than you need to write it on

358
00:18:02,280 --> 00:18:10,110
your own and in particular we're going
特别的，我们会研究由Intel处理器的x86-64架构
359
00:18:07,230 --> 00:18:12,480
to look at the language of of Intel

360
00:18:10,110 --> 00:18:13,170
processors the most recent versions of

361
00:18:12,480 --> 00:18:17,880
them are called

362
00:18:13,170 --> 00:18:20,460
x86 - 64 the 64-bit version of their
我们会研究x64架构的指令集
363
00:18:17,880 --> 00:18:23,160
instruction set and one thing that's new
这也是CSAPP第三版和第二版相比增加的内容
364
00:18:20,460 --> 00:18:26,670
in this course compared to previous ones

365
00:18:23,160 --> 00:18:31,250
we used to teach 32-bit stuff this

366
00:18:26,670 --> 00:18:31,250
course is 64 bits all the time

367
00:18:32,390 --> 00:18:37,500
another one that we'll talk about a fair
我们还会和大家讨论存储器系统
368
00:18:35,040 --> 00:18:40,010
amount that is really fairly visible to
存储器系统是计算机系统中最直接可见的部分之一
369
00:18:37,500 --> 00:18:42,570
programmers surprisingly visible is

370
00:18:40,010 --> 00:18:45,930
aspects of the memory system so modern

371
00:18:42,570 --> 00:18:49,770
computers have a very complex layered
现代计算机有一个非常复杂的 多级存储体系
372
00:18:45,930 --> 00:18:52,110
memory system to try and give you high
这个体系能够保证高速度、大容量
373
00:18:49,770 --> 00:18:55,140
performance in high capacity at the same

374
00:18:52,110 --> 00:18:58,650
time and there's some results of that
在了解了这个存储系统之后，我们就能够根据它的特性
375
00:18:55,140 --> 00:19:00,480
system that can mean that if you program
把自己的程序优化的更快
376
00:18:58,650 --> 00:19:02,910
write a program well it might work

377
00:19:00,480 --> 00:19:04,890
really well and if you don't it could
当然如果你不懂，你的程序就会跑的很慢，因为你根本没有把这个多级存储系统利用起来
378
00:19:02,910 --> 00:19:06,990
run very poorly because it's not making

379
00:19:04,890 --> 00:19:10,920
use of this hierarchical memory system

380
00:19:06,990 --> 00:19:13,860
so and also there's a lot of bugs that
我们也会讨论一些关于存储系统的bug，尤其是C程序里的
381
00:19:10,920 --> 00:19:15,930
show up especially in C programs that

382
00:19:13,860 --> 00:19:18,900
have to do with memory referencing
这些有问题的程序进行了错误的指针引用
383
00:19:15,930 --> 00:19:21,030
errors and so understanding what those
理解这些bug是什么，知道它们的表现形式，最后懂得如何避免它们
384
00:19:18,900 --> 00:19:22,920
errors are what their manifestation is

385
00:19:21,030 --> 00:19:26,460
how to prevent them is a big part of the
是我们这门课的一个重要部分
386
00:19:22,920 --> 00:19:31,350
course so for example if I define a
举个例子吧，加入我定义了一个结构体
387
00:19:26,460 --> 00:19:34,050
struct that contains two integer values
结构体内部有一个数组a，这个数组包含了两个int型变量
388
00:19:31,350 --> 00:19:38,900
a in an array and a double precision
以及一个名为d的double类型的浮点数变量
389
00:19:34,050 --> 00:19:38,900
floating point number D and if I
接下来，如果我调用这个名为fun（）的函数
390
00:19:38,910 --> 00:19:44,490
this function f UN you'll see what it
这个函数接受一个名字为i的整形参数
391
00:19:41,789 --> 00:19:47,210
does is it's given an argument I and it

392
00:19:44,490 --> 00:19:52,860
sets the ice element of a to some
并把a数组中的第i个元素修改为一个特定值
393
00:19:47,210 --> 00:19:57,510
strange-looking value so as you know I
当然这里i应该是0或者1
394
00:19:52,860 --> 00:20:00,929
should really only be either 0 or 1 with

395
00:19:57,510 --> 00:20:06,179
this code because that's the range of
因为数组a中只有两个元素
396
00:20:00,929 --> 00:20:09,390
possible values of this array a but we
但是我们其实也可以传入其他的值
397
00:20:06,179 --> 00:20:12,600
can try other things too so in

398
00:20:09,390 --> 00:20:16,400
particular if you run it on either one
我们考虑这个函数的返回值
399
00:20:12,600 --> 00:20:20,580
or two you'll get what you'd expect that
如果传入的是0或者1的话
400
00:20:16,400 --> 00:20:23,970
you assigned a 3.14 to element D of this
你会得到你想要的答案也就是3.14
401
00:20:20,580 --> 00:20:27,720
structure and when you read it back you
因为在这个函数中，你先给s对象的d赋值3.14，然后再读取它并作为返回值
402
00:20:23,970 --> 00:20:33,450
get the same thing and in fact but now
但是当我们传入参数2的时候，也就是函数会试着去访问a数组的第3个元素
403
00:20:27,720 --> 00:20:35,220
if I set a of two to this number all of

404
00:20:33,450 --> 00:20:37,710
a sudden you'll see that my
你会发现函数的返回值变了
405
00:20:35,220 --> 00:20:39,720
floating-point number which seems to
结构体中的不该受到影响的浮点数受到了影响
406
00:20:37,710 --> 00:20:45,299
have nothing to do with a has changed

407
00:20:39,720 --> 00:20:46,770
and if I do that same thing with I equal
如果我令i为3的话
408
00:20:45,299 --> 00:20:51,299
to three you'll see I get a number
我会得到一个相比3.14 更接近2的数
409
00:20:46,770 --> 00:20:55,590
that's closer to two then to 3.14 and if

410
00:20:51,299 --> 00:21:03,720
I keep going well nothing much happens
如果我这样继续尝试下去
411
00:20:55,590 --> 00:21:07,409
until I hit 6 and then the program
当i为6的时候，程序会崩溃
412
00:21:03,720 --> 00:21:09,870
crashes so something interesting is
一些神奇的，或者说古怪的事情发生了
413
00:21:07,409 --> 00:21:13,289
going on here at least something quirky

414
00:21:09,870 --> 00:21:16,409
is going on and the reason is again it
而隐藏在现象背后的本质
415
00:21:13,289 --> 00:21:19,289
has to do with how data is laid out in
是数据在内存中的存储方式和访问方式
416
00:21:16,409 --> 00:21:22,770
memory and how its accessed and one of
以及C C++语言的一个特性：无越界检查
417
00:21:19,289 --> 00:21:24,630
the features of C and C++ is it doesn't

418
00:21:22,770 --> 00:21:28,620
do any bounds checking on a race it will

419
00:21:24,630 --> 00:21:32,070
happily let you reference element number
如果你写了一段代码，尝试访问一个只有两个元素数组的的第五百万个元素
420
00:21:28,620 --> 00:21:34,740
5 million of a two element array and not
编译器会高兴的告诉你，没问题
421
00:21:32,070 --> 00:21:38,760
complain but the operating system might
当然操作系统可就不会这么想了，你的程序甚至系统有可能崩溃
422
00:21:34,740 --> 00:21:41,789
complain as it did here and it in this
就像在这里，这个特定的结构体的例子中，大家能看到的一样
423
00:21:38,760 --> 00:21:44,070
particular structure and we'll see more

424
00:21:41,789 --> 00:21:46,409
about how structures are implemented and
我们在后续课程中会涉及更多的结构体实现的细节
425
00:21:44,070 --> 00:21:49,679
weighed out but basically the two if
这里简单的说一下，大家可以看ppt
426
00:21:46,409 --> 00:21:52,050
each of these blocks in this vertical
每一个小方块都代表了4个字节
427
00:21:49,679 --> 00:21:54,780
chain represents 4 bytes

428
00:21:52,050 --> 00:21:58,530
and so the two elements of a each are 4
所以a数组的两个元素各占4个字节
429
00:21:54,780 --> 00:22:04,410
bytes D is 8 bytes and then there's some
而D占8个字节
430
00:21:58,530 --> 00:22:06,740
other stuff in the other bionda that's
除此之外还有一些数据，它们实际上不在这个结构体内部
431
00:22:04,410 --> 00:22:10,560
除此之外还有一些数据，它们实际上不在这个结构体内部

432
00:22:06,740 --> 00:22:14,520
所以如果我仅仅修改a数组的第0个或者第1个元素

433
00:22:10,560 --> 00:22:17,820
那我就只会修改这个数组中的元素

434
00:22:14,520 --> 00:22:20,460
那我就只会修改这个数组中的元素

435
00:22:17,820 --> 00:22:23,910
但是当我去调用这个函数，传入参数2或者3的时候

436
00:22:20,460 --> 00:22:27,060
我其实是在修改这个浮点数D，我修改的字节是属于D的

437
00:22:23,910 --> 00:22:28,980
我其实是在修改这个浮点数D，我修改的字节是属于D的

438
00:22:27,060 --> 00:22:31,290
这就是为什么你能看到这么诡异的结果

439
00:22:28,980 --> 00:22:34,860
当我继续尝试

440
00:22:31,290 --> 00:22:37,980
一直到6的时候

441
00:22:34,860 --> 00:22:40,440
一个大概是用来维持稳定的程序崩溃了

442
00:22:37,980 --> 00:22:43,680
这个程序大概是用来跟踪已分配的内存的

443
00:22:40,440 --> 00:22:47,820
这个程序大概是用来跟踪已分配的内存的

444
00:22:43,680 --> 00:22:50,390
这个程序的崩溃导致了整个的崩溃

445
00:22:47,820 --> 00:22:53,840
这是一个关于

446
00:22:50,390 --> 00:22:57,000
为什么编程令人如此苦恼的一个很好的例子

447
00:22:53,840 --> 00:22:59,930
因为就像我们刚刚所看见的，（编译器）并不会帮你做范围检查

448
00:22:57,000 --> 00:23:06,330
所以我们很容易写出有bug的代码

449
00:22:59,930 --> 00:23:09,330
这些代码中，程序员使用指针指向了非法的区域

450
00:23:06,330 --> 00:23:11,370
更为糟糕的是，因为指针引用错误产生的一些bug

451
00:23:09,330 --> 00:23:13,860
会有一种叫做时间效应的特性

452
00:23:11,370 --> 00:23:16,590
我们来举个例子

453
00:23:13,860 --> 00:23:18,450
假设你现在正在编写一种数据结构

454
00:23:16,590 --> 00:23:20,580
你想要修改内存中一个单元的内容

455
00:23:18,450 --> 00:23:21,930
字幕君：比如修改一颗树的某一个节点的值

456
00:23:20,580 --> 00:23:24,750
但是因为疏忽大意

457
00:23:21,930 --> 00:23:26,340
你错误的修改了其他单元的内容

458
00:23:24,750 --> 00:23:29,400
而且这个单元并不是在你想要修改的单元旁边的

459
00:23:26,340 --> 00:23:32,970
它们之间隔了10000个单元

460
00:23:29,400 --> 00:23:35,580
好了，现在运行你的代码，一开始没有问题

461
00:23:32,970 --> 00:23:39,390
但是在运行了很久之后，

462
00:23:35,580 --> 00:23:42,180
那个被你污染的数据区终于被你访问到了

463
00:23:39,390 --> 00:23:45,030
这时候就坏事了

464
00:23:42,180 --> 00:23:47,130
这种（具有时间效应的）bug可以说是

465
00:23:45,030 --> 00:23:49,830
世界上最可怕的bug

466
00:23:47,130 --> 00:23:56,400
尝试发现并且找出指针引用错误的bug

467
00:23:49,830 --> 00:23:58,380
也是最恐怖的debug过程

468
00:23:56,400 --> 00:24:02,010
不进行范围检查，是很多程序员不食用C/C++的原因之一

469
00:23:58,380 --> 00:24:05,220
也是很关键的一个原因

470
00:24:02,010 --> 00:24:06,510
我承认这一点

471
00:24:05,220 --> 00:24:08,130
但是你们是肯定要写很多C/C++程序的

472
00:24:06,510 --> 00:24:10,110
在处理这些bug的过程中，你们会学到很多

473
00:24:08,130 --> 00:24:12,090
同时你们也会不时的意识到

474
00:24:10,110 --> 00:24:14,789
在自己的代码里应该自己做（指针）的范围检查

475
00:24:12,090 --> 00:24:19,490
当然也有工具能够帮助你debug

476
00:24:14,789 --> 00:24:22,080
当然也有工具能够帮助你debug

477
00:24:19,490 --> 00:24:24,419
它们可以作为你的程序的防弹衣

478
00:24:22,080 --> 00:24:26,070
这些工具能够检测到指针非法引用的问题

479
00:24:24,419 --> 00:24:28,320
当然这并不意味着你要更改编程语言

480
00:24:26,070 --> 00:24:32,190
但是（不做指针范围检查）是C/C++的一个特性

481
00:24:28,320 --> 00:24:34,140
深入理解数据结构在机器层面的表示

482
00:24:32,190 --> 00:24:36,210
深入理解数据结构在机器层面的表示

483
00:24:34,140 --> 00:24:38,460
以及这些数据结构是如何运作的

484
00:24:36,210 --> 00:24:40,860
一方面，能够提升你们处理

485
00:24:38,460 --> 00:24:43,289
这一类脆弱情况（bug）的能力

486
00:24:40,860 --> 00:24:45,210
这里所说的脆弱是也是从安全的角度来说的

487
00:24:43,289 --> 00:24:51,450
因为错误的指针引用会导致很严重的安全问题

488
00:24:45,210 --> 00:24:53,159
我们在本课程将要接触到的第四章

489
00:24:51,450 --> 00:24:55,429
会涉及到如何提升你的程序的性能

490
00:24:53,159 --> 00:24:59,220
会涉及到如何提升你的程序的性能

491
00:24:55,429 --> 00:25:00,929
和你在数据结构、算法课程学到的渐进分析不同

492
00:24:59,220 --> 00:25:02,760
那些课程（DSA）更多的关注于

493
00:25:00,929 --> 00:25:04,860
在合适的数据结构上使用恰当的算法来降低理论复杂度

494
00:25:02,760 --> 00:25:07,320
当然那些内容是很重要的，也是很棒的

495
00:25:04,860 --> 00:25:11,390
我不否认这一点

496
00:25:07,320 --> 00:25:14,039
但我们的课程会更多的涉及较低层面的优化

497
00:25:11,390 --> 00:25:16,650
这是你们之前从未接触过的

498
00:25:14,039 --> 00:25:19,140
你们需要理解计算机系统做了什么

499
00:25:16,650 --> 00:25:21,450
是什么让计算机系统运作正常

500
00:25:19,140 --> 00:25:24,330
当计算机运行出现问题的时候到底是哪里出问题了

501
00:25:21,450 --> 00:25:29,640
在理解了这些之后，你们就能够从底层对程序进行优化

502
00:25:24,330 --> 00:25:31,980
我们很喜欢的关于底层优化的一个例子

503
00:25:29,640 --> 00:25:37,789
我们会给大家展示两个函数

504
00:25:31,980 --> 00:25:41,970
这两个函数做了同一件事

505
00:25:37,789 --> 00:25:46,130
把一个叫做SRC的二维数组（矩阵）赋值给名为DST的二维数组

506
00:25:41,970 --> 00:25:51,990
这两个二维数组（矩阵）的规模

507
00:25:46,130 --> 00:25:54,570
都是2048*2048

508
00:25:51,990 --> 00:25:56,700
都是2048*2048

509
00:25:54,570 --> 00:25:59,010
我们来看一下代码

510
00:25:56,700 --> 00:26:01,470
我们有一个嵌套的循环

511
00:25:59,010 --> 00:26:04,620
循环变量是行/列的下标

512
00:26:01,470 --> 00:26:06,929
每次循环所做的事情

513
00:26:04,620 --> 00:26:09,600
不过是把src矩阵的一个元素赋值给dst矩阵的一个元素

514
00:26:06,929 --> 00:26:14,010
这两个函数的唯一区别，正如你所看到的

515
00:26:09,600 --> 00:26:15,840
是它们的循环嵌套形式

516
00:26:14,010 --> 00:26:20,460
这两个函数的循环嵌套顺序不同

517
00:26:15,840 --> 00:26:23,170
我可以把行循环放在外层

518
00:26:20,460 --> 00:26:25,300
先访问每一行，然后依次复制每一行的每一个元素

519
00:26:23,170 --> 00:26:27,550
另一个函数则是对于每一列，依次复制各个元素

520
00:26:25,300 --> 00:26:29,200
（这里教授的意思我没太搞懂，相信大家能看懂）

521
00:26:27,550 --> 00:26:32,110
这就是这两个程序唯一的区别

522
00:26:29,200 --> 00:26:35,380
但是如果你去运行它(linux下可用time）

523
00:26:32,110 --> 00:26:37,180
在一个特定的系统下运行这两个程序

524
00:26:35,380 --> 00:26:39,730
你会发现其中一个程序的运行速度远远快于另外一个

525
00:26:37,180 --> 00:26:42,610
在我们的电脑上，这两个程序的运行所需时间

526
00:26:39,730 --> 00:26:45,310
竟然有20倍的差距

527
00:26:42,610 --> 00:26:48,370
所以肯定有些我们不知道的事情发生了

528
00:26:45,310 --> 00:26:50,400
不然没有办法解释这奇异的现象

529
00:26:48,370 --> 00:26:53,350
这两个程序的差异仅仅是循环的顺序

530
00:26:50,400 --> 00:26:55,510
这样看似不起眼的差异

531
00:26:53,350 --> 00:26:57,280
对最终功能毫无影响的差异

532
00:26:55,510 --> 00:27:01,180
竟会产生如此结果

533
00:26:57,280 --> 00:27:05,100
要理解为什么会这样

534
00:27:01,180 --> 00:27:05,100
你可以看一下我们CSAPP书的封面

535
00:27:07,020 --> 00:27:14,710
because basically you're two different

536
00:27:11,530 --> 00:27:16,780
points of this strange-looking picture

537
00:27:14,710 --> 00:27:19,360
that's on your book and since there's no

538
00:27:16,780 --> 00:27:23,500
axes or labels on it it makes no sense

539
00:27:19,360 --> 00:27:25,690
whatsoever but it's there so what you

540
00:27:23,500 --> 00:27:27,640
see is this picture shows four different

541
00:27:25,690 --> 00:27:30,610
memory access patterns and I won't go

542
00:27:27,640 --> 00:27:35,250
into the details of what the throughput

543
00:27:30,610 --> 00:27:38,460
measured in megabytes per second on on a

544
00:27:35,250 --> 00:27:40,780
basically a copying program was and

545
00:27:38,460 --> 00:27:43,000
without going into the details what

546
00:27:40,780 --> 00:27:44,830
you'll see is these two functions sort

547
00:27:43,000 --> 00:27:47,530
of sit at different points in this

548
00:27:44,830 --> 00:27:50,530
memory access pattern the one that goes

549
00:27:47,530 --> 00:27:51,910
through row by row is much better than

550
00:27:50,530 --> 00:27:55,480
the one that goes through column by

551
00:27:51,910 --> 00:27:57,430
column and as a result you're getting a

552
00:27:55,480 --> 00:27:59,560
lot better performance that it has to do

553
00:27:57,430 --> 00:28:01,960
with this memory hierarchy and what they

554
00:27:59,560 --> 00:28:04,690
call the cache memories that you're

555
00:28:01,960 --> 00:28:08,650
getting way better performance out of it

556
00:28:04,690 --> 00:28:10,420
in case than the other so that's

557
00:28:08,650 --> 00:28:12,940
explains what the cover of the book is

558
00:28:10,420 --> 00:28:16,180
about and we'll talk about it more later

559
00:28:12,940 --> 00:28:18,070
in the course and then a final part of

560
00:28:16,180 --> 00:28:20,020
the course talks more about not just

561
00:28:18,070 --> 00:28:22,930
getting computers to run little programs

562
00:28:20,020 --> 00:28:25,420
in isolation but getting computers that

563
00:28:22,930 --> 00:28:28,750
talk to each other over networks and

564
00:28:25,420 --> 00:28:31,180
implement services like web servers and

565
00:28:28,750 --> 00:28:32,679
other functions like that which of

566
00:28:31,180 --> 00:28:34,240
course is where

567
00:28:32,679 --> 00:28:36,850
most in the world of computing sits

568
00:28:34,240 --> 00:28:39,879
today it's not just isolated machines

569
00:28:36,850 --> 00:28:41,590
but computers that interact with each

570
00:28:39,879 --> 00:28:44,619
other over the network they're embedded

571
00:28:41,590 --> 00:28:45,700
controllers that are interacting with

572
00:28:44,619 --> 00:28:48,490
the physical world

573
00:28:45,700 --> 00:28:50,740
so really the the world of computers is

574
00:28:48,490 --> 00:28:53,289
a much richer environment and will cover

575
00:28:50,740 --> 00:29:00,039
at least some aspects of that in the

576
00:28:53,289 --> 00:29:01,539
final part of this course so as I

577
00:29:00,039 --> 00:29:03,159
mentioned the other feature of this

578
00:29:01,539 --> 00:29:05,230
course is it will get you ready for

579
00:29:03,159 --> 00:29:08,529
other systems courses you might take it

580
00:29:05,230 --> 00:29:11,379
CMU and here we listed actually a subset

581
00:29:08,529 --> 00:29:13,749
of the courses at the university that

582
00:29:11,379 --> 00:29:16,629
require this course is a prerequisite

583
00:29:13,749 --> 00:29:20,110
and they're mostly in computer science

584
00:29:16,629 --> 00:29:24,639
and ECE but you'll see it's quite a

585
00:29:20,110 --> 00:29:28,119
range of of different courses and each

586
00:29:24,639 --> 00:29:30,759
of them builds on say one or multiple

587
00:29:28,119 --> 00:29:34,179
aspects of the material you learn in the

588
00:29:30,759 --> 00:29:36,100
course so the reason why we make

589
00:29:34,179 --> 00:29:39,190
everyone take this course including

590
00:29:36,100 --> 00:29:41,169
incoming Master students is that all

591
00:29:39,190 --> 00:29:43,809
these other courses at the University

592
00:29:41,169 --> 00:29:46,749
have come to rely on students being

593
00:29:43,809 --> 00:29:50,230
familiar and having done the work of two

594
00:29:46,749 --> 00:29:52,450
thirteen or five thirteen as a

595
00:29:50,230 --> 00:29:55,269
prerequisite and they can build on that

596
00:29:52,450 --> 00:29:57,340
material and sort of cover more ground

597
00:29:55,269 --> 00:29:59,200
as a result rather than having to do

598
00:29:57,340 --> 00:30:02,049
what would otherwise be somewhat

599
00:29:59,200 --> 00:30:03,909
remedial work on it and in fact one of

600
00:30:02,049 --> 00:30:06,249
the part of the genesis of this course

601
00:30:03,909 --> 00:30:10,450
was the people who taught the operating

602
00:30:06,249 --> 00:30:11,830
system course a 410 sort of complained

603
00:30:10,450 --> 00:30:13,210
that they were spending too much time at

604
00:30:11,830 --> 00:30:14,950
the beginning of the course talking

605
00:30:13,210 --> 00:30:18,789
about some very basics of machine

606
00:30:14,950 --> 00:30:21,340
programming and and Dave and I said oh

607
00:30:18,789 --> 00:30:25,419
well we can cover that so that was part

608
00:30:21,340 --> 00:30:27,519
of what got this course started and as I

609
00:30:25,419 --> 00:30:29,499
mentioned that the course has a sort of

610
00:30:27,519 --> 00:30:32,559
perspective that's very different from

611
00:30:29,499 --> 00:30:35,259
traditional systems courses most systems

612
00:30:32,559 --> 00:30:37,809
courses including that whole array saw

613
00:30:35,259 --> 00:30:40,360
there were about how do I build some

614
00:30:37,809 --> 00:30:42,700
particular feature how do i implement an

615
00:30:40,360 --> 00:30:46,090
operating system how do I design a

616
00:30:42,700 --> 00:30:48,100
pipeline microprocessor

617
00:30:46,090 --> 00:30:50,350
and don't it's all important stuff to

618
00:30:48,100 --> 00:30:52,900
know we really want the people who are

619
00:30:50,350 --> 00:30:54,909
out there building operating systems and

620
00:30:52,900 --> 00:30:57,970
designing microprocessors to have

621
00:30:54,909 --> 00:30:59,860
learned how to do it on the other hand

622
00:30:57,970 --> 00:31:01,510
is a way to sort of get new into this

623
00:30:59,860 --> 00:31:04,150
and get the introduction and get the

624
00:31:01,510 --> 00:31:05,470
experience we find it more useful to

625
00:31:04,150 --> 00:31:11,159
take what we call a programmers

626
00:31:05,470 --> 00:31:14,890
perspective meaning understanding of

627
00:31:11,159 --> 00:31:17,080
what you as a person who sits in front

628
00:31:14,890 --> 00:31:19,240
of a computer screen and types code I

629
00:31:17,080 --> 00:31:21,580
need to know about that machine you're

630
00:31:19,240 --> 00:31:24,850
typing code for in order to be effective

631
00:31:21,580 --> 00:31:26,440
at doing it as opposed to somebody who

632
00:31:24,850 --> 00:31:31,149
some day going to be designing the

633
00:31:26,440 --> 00:31:33,340
actual machine itself so that by taking

634
00:31:31,149 --> 00:31:35,500
that perspective it gives you sort of an

635
00:31:33,340 --> 00:31:37,090
understanding so now when you go off to

636
00:31:35,500 --> 00:31:39,399
implement it you'll actually know what

637
00:31:37,090 --> 00:31:42,070
these features are and why it's

638
00:31:39,399 --> 00:31:44,500
important to implement them well but

639
00:31:42,070 --> 00:31:47,409
also that by doing this programmers

640
00:31:44,500 --> 00:31:49,419
perspective it lets you right away get

641
00:31:47,409 --> 00:31:51,370
tools that you can use in other places

642
00:31:49,419 --> 00:31:54,159
where you're writing programs are doing

643
00:31:51,370 --> 00:31:57,100
anything related to it and be more

644
00:31:54,159 --> 00:31:59,909
effective at that so this programmers

645
00:31:57,100 --> 00:32:03,340
perspective really gives this dual

646
00:31:59,909 --> 00:32:05,590
benefit to it that we feel is very

647
00:32:03,340 --> 00:32:07,600
useful and students have taken the

648
00:32:05,590 --> 00:32:11,049
course in the past have expressed that

649
00:32:07,600 --> 00:32:13,570
as well so as I mentioned the we have

650
00:32:11,049 --> 00:32:17,289
two instructors for the course

651
00:32:13,570 --> 00:32:21,039
and they also happen to be authors and

652
00:32:17,289 --> 00:32:23,860
the longest we've probably taught this

653
00:32:21,039 --> 00:32:25,960
course more than anyone else but it's

654
00:32:23,860 --> 00:32:30,190
also taught by other people on campus as

655
00:32:25,960 --> 00:32:34,450
well so what I'm going to do now is hand

656
00:32:30,190 --> 00:32:36,820
my pair of microphones over two days all

657
00:32:34,450 --> 00:32:39,159
right welcome good afternoon it's great

658
00:32:36,820 --> 00:32:42,610
to see you my name is Dave Wilhelm Hren

659
00:32:39,159 --> 00:32:45,190
and I'm just delighted to have the

660
00:32:42,610 --> 00:32:52,419
opportunity to be one of your

661
00:32:45,190 --> 00:32:55,450
instructors this term this course is one

662
00:32:52,419 --> 00:32:56,919
of the reason I'm so excited to be

663
00:32:55,450 --> 00:32:58,200
teaching this course I mean I just love

664
00:32:56,919 --> 00:33:01,109
this course and

665
00:32:58,200 --> 00:33:02,989
the real reason is the the opportunity

666
00:33:01,109 --> 00:33:05,759
of represents to have an impact on

667
00:33:02,989 --> 00:33:07,789
people's lives we really believe that

668
00:33:05,759 --> 00:33:10,769
the material you learned this semester

669
00:33:07,789 --> 00:33:13,109
can help a really positive and

670
00:33:10,769 --> 00:33:16,169
long-lasting impact on on your careers

671
00:33:13,109 --> 00:33:19,259
and it'll help you not only with your

672
00:33:16,169 --> 00:33:23,429
future classes but also future positions

673
00:33:19,259 --> 00:33:24,869
you have and I hear this from people all

674
00:33:23,429 --> 00:33:28,109
all the time

675
00:33:24,869 --> 00:33:30,149
former CMU students and students around

676
00:33:28,109 --> 00:33:32,899
the world to have taken the equivalent

677
00:33:30,149 --> 00:33:36,359
of 213 at their schools

678
00:33:32,899 --> 00:33:38,460
even a couple years ago we were

679
00:33:36,359 --> 00:33:41,100
interviewing a faculty member finished

680
00:33:38,460 --> 00:33:44,460
tenure-track faculty member who went to

681
00:33:41,100 --> 00:33:45,960
did his undergrad at CMU and then went

682
00:33:44,460 --> 00:33:50,190
off to Stanford got his PhD at Stanford

683
00:33:45,960 --> 00:33:54,539
and was coming back to you know join the

684
00:33:50,190 --> 00:33:56,669
faculty and he told me that 213 changed

685
00:33:54,539 --> 00:33:58,039
his life in our interview and I don't

686
00:33:56,669 --> 00:34:01,440
know if he was trying to butter me up

687
00:33:58,039 --> 00:34:03,539
but I I think I believe him he he said

688
00:34:01,440 --> 00:34:05,639
it changed his whole life in the sense

689
00:34:03,539 --> 00:34:07,889
that it gave him a research direction

690
00:34:05,639 --> 00:34:10,049
you know he didn't really know what what

691
00:34:07,889 --> 00:34:12,089
he knew it kind of like computer science

692
00:34:10,049 --> 00:34:15,960
but it didn't really know what direction

693
00:34:12,089 --> 00:34:18,389
to go and and after he took to 13 he

694
00:34:15,960 --> 00:34:21,990
knew they wanted to to do his word was

695
00:34:18,389 --> 00:34:23,940
life's work in systems now it was just

696
00:34:21,990 --> 00:34:26,399
remarkable right to come back and have

697
00:34:23,940 --> 00:34:28,139
we ended up actually hiring him and he

698
00:34:26,399 --> 00:34:29,760
told me that everybody in his lab at

699
00:34:28,139 --> 00:34:32,040
Stanford all of the grad students had a

700
00:34:29,760 --> 00:34:33,990
copy of a book on their desk front and

701
00:34:32,040 --> 00:34:38,369
they were from all over you know all

702
00:34:33,990 --> 00:34:41,460
different schools and so I mean I even I

703
00:34:38,369 --> 00:34:44,069
was in a bookstore in Beijing a couple

704
00:34:41,460 --> 00:34:47,129
years ago right outside the PKU campus

705
00:34:44,069 --> 00:34:48,389
and I was up on the fifth floor trying

706
00:34:47,129 --> 00:34:52,740
to see if I could find a copy of the

707
00:34:48,389 --> 00:34:55,559
textbook and I found the English version

708
00:34:52,740 --> 00:34:59,089
in one aisle and then a couple aisles

709
00:34:55,559 --> 00:35:01,440
over I found the Chinese version I was

710
00:34:59,089 --> 00:35:04,109
going through the Chinese version and

711
00:35:01,440 --> 00:35:06,900
the sky tapped me on my shoulder and I

712
00:35:04,109 --> 00:35:08,520
turned around he says oh man that that

713
00:35:06,900 --> 00:35:12,319
book is really good you should the

714
00:35:08,520 --> 00:35:12,319
English version is two aisles over

715
00:35:12,860 --> 00:35:20,430
and I mean it just blew me away to be to

716
00:35:17,970 --> 00:35:22,380
be in the head of someone like halfway

717
00:35:20,430 --> 00:35:25,560
around the world it was just that it was

718
00:35:22,380 --> 00:35:27,810
just one of those moments and so I'm I'm

719
00:35:25,560 --> 00:35:29,610
not trying to boast I'm just trying what

720
00:35:27,810 --> 00:35:32,100
I want I want to give you the sense of

721
00:35:29,610 --> 00:35:35,610
what it what an opportunity this course

722
00:35:32,100 --> 00:35:37,950
represents for for Randi and I to to

723
00:35:35,610 --> 00:35:43,950
have what we hope will be a really

724
00:35:37,950 --> 00:35:48,270
positive impact on on your lives so let

725
00:35:43,950 --> 00:35:51,300
me we have kind of a kind of a funny

726
00:35:48,270 --> 00:35:53,010
organization for the course to it in

727
00:35:51,300 --> 00:35:55,230
response to that just that the

728
00:35:53,010 --> 00:35:57,570
tremendous demand we have we found that

729
00:35:55,230 --> 00:36:00,330
we have for it so there's there's

730
00:35:57,570 --> 00:36:02,640
actually three course numbers but it's

731
00:36:00,330 --> 00:36:06,450
all the same course okay it's identical

732
00:36:02,640 --> 00:36:11,550
course 513 15 513 is for our master

733
00:36:06,450 --> 00:36:13,380
students and the 513 513 doesn't have a

734
00:36:11,550 --> 00:36:15,090
formal lecture so there's no seats

735
00:36:13,380 --> 00:36:17,869
assigned to it

736
00:36:15,090 --> 00:36:20,100
instead we'll videotape the lectures and

737
00:36:17,869 --> 00:36:22,920
we'll make those available on the course

738
00:36:20,100 --> 00:36:25,260
web web page for our for our graduate

739
00:36:22,920 --> 00:36:29,250
students and the reason we do this is

740
00:36:25,260 --> 00:36:31,109
just because in the past well we we

741
00:36:29,250 --> 00:36:32,970
didn't have enough seats for everyone

742
00:36:31,109 --> 00:36:35,630
and there would be cases where there

743
00:36:32,970 --> 00:36:38,400
might be a hundred 150

744
00:36:35,630 --> 00:36:39,600
Master students on the waitlist they

745
00:36:38,400 --> 00:36:41,609
wouldn't be able to get into the course

746
00:36:39,600 --> 00:36:43,230
and we we didn't really want that

747
00:36:41,609 --> 00:36:46,440
because they need this course for to

748
00:36:43,230 --> 00:36:49,200
take other courses so that's the reason

749
00:36:46,440 --> 00:36:53,250
why we have this this sort of does not

750
00:36:49,200 --> 00:36:55,470
meet version of 213 is 513 because we

751
00:36:53,250 --> 00:36:57,060
can admit as many all the master's

752
00:36:55,470 --> 00:37:02,100
students that that need to take the

753
00:36:57,060 --> 00:37:04,980
course now 15 to 13 and 18 to 13 or are

754
00:37:02,100 --> 00:37:12,510
for undergraduates in computer science

755
00:37:04,980 --> 00:37:14,310
and ECE respectively okay and the

756
00:37:12,510 --> 00:37:17,369
undergraduates will go to lectures and

757
00:37:14,310 --> 00:37:18,930
recitations okay in person graduate

758
00:37:17,369 --> 00:37:21,210
students will watch videotapes of those

759
00:37:18,930 --> 00:37:22,800
but otherwise yes

760
00:37:21,210 --> 00:37:26,940
for those videotapes will they be

761
00:37:22,800 --> 00:37:32,420
available Kamal yeah we're making them

762
00:37:26,940 --> 00:37:34,500
available to everyone actually sorry and

763
00:37:32,420 --> 00:37:40,619
lecture slides as well everything is

764
00:37:34,500 --> 00:37:46,680
available on the course web page so so

765
00:37:40,619 --> 00:37:50,490
you'll be doing the all of students will

766
00:37:46,680 --> 00:37:53,730
have equal access to office hours the

767
00:37:50,490 --> 00:37:57,030
staff mailing list and everybody does

768
00:37:53,730 --> 00:37:58,920
the same labs and the same exams okay so

769
00:37:57,030 --> 00:38:00,119
it's just a question it's just a matter

770
00:37:58,920 --> 00:38:01,800
of whether you're good a lecture in

771
00:38:00,119 --> 00:38:04,800
person or if you're watching on video in

772
00:38:01,800 --> 00:38:06,390
fact if you know since it's available to

773
00:38:04,800 --> 00:38:08,339
everybody if you miss lecture it'll be

774
00:38:06,390 --> 00:38:09,839
there on the web page and you can catch

775
00:38:08,339 --> 00:38:11,730
up which I know you'll probably do

776
00:38:09,839 --> 00:38:14,069
actually I know most of you will never

777
00:38:11,730 --> 00:38:18,020
miss class right but the few of you who

778
00:38:14,069 --> 00:38:18,020
do you'll be able to watch the video

779
00:38:18,800 --> 00:38:24,990
okay all right this is the one part I

780
00:38:23,250 --> 00:38:28,319
list the part I hate

781
00:38:24,990 --> 00:38:30,809
I love teaching that this is this is the

782
00:38:28,319 --> 00:38:33,000
one part teaching that none of us really

783
00:38:30,809 --> 00:38:37,440
like but we have to talk about it and

784
00:38:33,000 --> 00:38:42,599
that's academic integrity if you're new

785
00:38:37,440 --> 00:38:44,010
on campus coming from a international

786
00:38:42,599 --> 00:38:49,200
school if you're an international

787
00:38:44,010 --> 00:38:52,319
student new on campus there might be

788
00:38:49,200 --> 00:38:55,619
different notions of academic integrity

789
00:38:52,319 --> 00:38:58,859
and different notions of cheating at

790
00:38:55,619 --> 00:39:01,770
your undergraduate school or your old

791
00:38:58,859 --> 00:39:04,109
school so if you're new on campus pay

792
00:39:01,770 --> 00:39:06,480
very close attention to this because at

793
00:39:04,109 --> 00:39:11,010
Carnegie Mellon we take academic

794
00:39:06,480 --> 00:39:15,150
integrity very seriously okay it's not a

795
00:39:11,010 --> 00:39:17,059
wink wink nod nod we're very serious

796
00:39:15,150 --> 00:39:20,339
about it

797
00:39:17,059 --> 00:39:21,660
and we want you we want everybody doing

798
00:39:20,339 --> 00:39:27,210
their own work to preserve the integrity

799
00:39:21,660 --> 00:39:30,839
of the courses so what exactly is

800
00:39:27,210 --> 00:39:34,760
cheating so if you share code with

801
00:39:30,839 --> 00:39:37,550
anybody either copying

802
00:39:34,760 --> 00:39:38,900
retyping looking at somebody's code like

803
00:39:37,550 --> 00:39:42,670
if you look at somebody's code on the

804
00:39:38,900 --> 00:39:48,170
screen or if you give somebody a file

805
00:39:42,670 --> 00:39:53,930
all of those all of those examples of

806
00:39:48,170 --> 00:39:56,060
sharing are cheating if if you describe

807
00:39:53,930 --> 00:39:58,390
your code like line by line to somebody

808
00:39:56,060 --> 00:39:58,390
that's cheating

809
00:39:58,810 --> 00:40:06,250
if you coach somebody line by line

810
00:40:02,800 --> 00:40:06,250
that's cheating

811
00:40:06,700 --> 00:40:12,920
searching the web for solutions just the

812
00:40:09,440 --> 00:40:15,470
act of searching is cheating and this is

813
00:40:12,920 --> 00:40:19,070
a this is a real problem for us in

814
00:40:15,470 --> 00:40:22,760
particular because the course is offered

815
00:40:19,070 --> 00:40:25,160
all around the world and people either

816
00:40:22,760 --> 00:40:26,930
maliciously or or sometimes just they're

817
00:40:25,160 --> 00:40:28,910
proud of their work and they post it you

818
00:40:26,930 --> 00:40:34,340
know for employers on like public github

819
00:40:28,910 --> 00:40:37,460
sites so it's it might be tempting to to

820
00:40:34,340 --> 00:40:39,700
search for these solutions but even the

821
00:40:37,460 --> 00:40:42,140
act of searching is cheating and

822
00:40:39,700 --> 00:40:43,220
definitely if you find some a solution

823
00:40:42,140 --> 00:40:46,250
in and use it

824
00:40:43,220 --> 00:40:49,610
that's cheating even if you modify it

825
00:40:46,250 --> 00:40:51,260
afterwards and I just want you to

826
00:40:49,610 --> 00:40:53,780
remember I can I know how to use Google

827
00:40:51,260 --> 00:41:02,560
just as well as anybody else right so I

828
00:40:53,780 --> 00:41:05,120
I can search for solutions too so

829
00:41:02,560 --> 00:41:07,400
copying code you know you might be

830
00:41:05,120 --> 00:41:10,190
tempted you might be tempted to copy

831
00:41:07,400 --> 00:41:13,220
code from someone who took the class you

832
00:41:10,190 --> 00:41:16,100
know in a previous semester don't do it

833
00:41:13,220 --> 00:41:18,320
that's that's cheating - now what's not

834
00:41:16,100 --> 00:41:21,020
cheating so you can you can help each

835
00:41:18,320 --> 00:41:22,850
other use tools you know somebody's

836
00:41:21,020 --> 00:41:27,020
having trouble using gdb or you know

837
00:41:22,850 --> 00:41:29,330
they have questions about how to run use

838
00:41:27,020 --> 00:41:32,270
a text editor that stuff's all great you

839
00:41:29,330 --> 00:41:34,220
can help each other out using the tools

840
00:41:32,270 --> 00:41:38,210
how to log into the shark machines all

841
00:41:34,220 --> 00:41:39,650
of that kind of stuff and you can help

842
00:41:38,210 --> 00:41:41,510
you can discuss sort of high-level

843
00:41:39,650 --> 00:41:44,020
design issues and that's probably a good

844
00:41:41,510 --> 00:41:44,020
idea yes

845
00:41:45,960 --> 00:41:56,170
yeah yeah did you take it a previous

846
00:41:48,700 --> 00:41:57,760
semester oh okay yeah the question was

847
00:41:56,170 --> 00:41:59,800
if you took it in a previous semester

848
00:41:57,760 --> 00:42:05,350
can use your your work and the answer is

849
00:41:59,800 --> 00:42:07,240
yes so it you can also talk to each

850
00:42:05,350 --> 00:42:10,390
other about high level you know design

851
00:42:07,240 --> 00:42:14,680
issues you know how are you are using an

852
00:42:10,390 --> 00:42:16,990
explicit list or using a segregated list

853
00:42:14,680 --> 00:42:20,500
for your Malik lab okay that kind of

854
00:42:16,990 --> 00:42:25,300
stuff is is is okay okay high level okay

855
00:42:20,500 --> 00:42:28,990
low level not okay and basically what we

856
00:42:25,300 --> 00:42:30,970
want you to write your own code this is

857
00:42:28,990 --> 00:42:32,650
not you know it's kind of a cut and

858
00:42:30,970 --> 00:42:36,550
paste world these days right you look

859
00:42:32,650 --> 00:42:40,180
stuff up on Google's Stack Overflow you

860
00:42:36,550 --> 00:42:44,230
cut and paste it but that's not that's

861
00:42:40,180 --> 00:42:45,850
not the way we do it here we want you to

862
00:42:44,230 --> 00:42:49,120
do the work yourself we want you to

863
00:42:45,850 --> 00:42:53,190
enjoy the experience of figuring things

864
00:42:49,120 --> 00:42:53,190
out and learning how to solve problems

865
00:42:54,180 --> 00:43:01,330
now the consequences for cheating

866
00:42:56,670 --> 00:43:03,460
there's a single sanction if you're

867
00:43:01,330 --> 00:43:05,160
caught cheating you'll you'll be

868
00:43:03,460 --> 00:43:08,650
expelled from the course with an R

869
00:43:05,160 --> 00:43:11,170
there's no exceptions all right if you

870
00:43:08,650 --> 00:43:18,250
drop the course we'll just reinstate you

871
00:43:11,170 --> 00:43:22,570
and then flunk you it's really a it's a

872
00:43:18,250 --> 00:43:25,360
very serious very serious penalty

873
00:43:22,570 --> 00:43:31,900
because we just take it we take it so

874
00:43:25,360 --> 00:43:35,220
seriously at at sub and it's just it's

875
00:43:31,900 --> 00:43:35,220
just something we don't want you to do

876
00:43:35,310 --> 00:43:50,200
we have amazing tools to detect code

877
00:43:39,670 --> 00:43:54,640
plagiarism we have amazing tools to

878
00:43:50,200 --> 00:43:59,410
detect plagiarism that are that are

879
00:43:54,640 --> 00:44:01,380
resilient to renaming reformatting they

880
00:43:59,410 --> 00:44:08,200
operate at a very deep syntactic level

881
00:44:01,380 --> 00:44:10,540
and so just please please don't do it we

882
00:44:08,200 --> 00:44:12,930
have I think 18 TAS will have office

883
00:44:10,540 --> 00:44:15,550
hours almost every day of the week

884
00:44:12,930 --> 00:44:22,270
there's plenty of opportunities and ways

885
00:44:15,550 --> 00:44:24,220
to get help start early if you get stuck

886
00:44:22,270 --> 00:44:29,280
start early enough so that you get stuck

887
00:44:24,220 --> 00:44:31,690
you can go ask for help we have the

888
00:44:29,280 --> 00:44:33,100
automatic extensions built-in if you

889
00:44:31,690 --> 00:44:37,150
need more time I'll talk about that

890
00:44:33,100 --> 00:44:42,700
later form of grace days but please

891
00:44:37,150 --> 00:44:45,430
please whatever you do don't cheat it's

892
00:44:42,700 --> 00:44:48,760
just tragic when it happens last last

893
00:44:45,430 --> 00:44:51,670
fall 25 students were expelled from the

894
00:44:48,760 --> 00:44:53,560
course some were expelled from the

895
00:44:51,670 --> 00:44:57,700
university because it was a second

896
00:44:53,560 --> 00:44:59,560
offense many were sent home I talked to

897
00:44:57,700 --> 00:45:03,280
students who were like the only person

898
00:44:59,560 --> 00:45:05,560
in their family to go to college the

899
00:45:03,280 --> 00:45:08,230
only person in their village to go to

900
00:45:05,560 --> 00:45:10,240
college and they were going home without

901
00:45:08,230 --> 00:45:13,660
without a degree and it's just tragic

902
00:45:10,240 --> 00:45:17,700
it's just so please please please don't

903
00:45:13,660 --> 00:45:21,210
do it do your own work and it'll be a

904
00:45:17,700 --> 00:45:21,210
wonderful experience

905
00:45:22,520 --> 00:45:26,660
Randy mentioned the the textbook is

906
00:45:24,610 --> 00:45:30,920
computer systems the programmers

907
00:45:26,660 --> 00:45:33,710
perspective third edition you can

908
00:45:30,920 --> 00:45:36,440
there's a whole bunch of supporting

909
00:45:33,710 --> 00:45:41,030
material on the on the books website at

910
00:45:36,440 --> 00:45:42,830
CFA PT dot C s CMU edu and as Randy

911
00:45:41,030 --> 00:45:44,420
mentioned this this book really matters

912
00:45:42,830 --> 00:45:48,110
for the course because actually the book

913
00:45:44,420 --> 00:45:49,580
came out of the course right so the book

914
00:45:48,110 --> 00:45:53,750
is the course of course that's the book

915
00:45:49,580 --> 00:45:55,610
on and so it'll it'll really help you

916
00:45:53,750 --> 00:45:57,440
love it the labs that we do come

917
00:45:55,610 --> 00:45:59,630
directly from material that we discuss

918
00:45:57,440 --> 00:46:01,160
in the book so what I would encourage

919
00:45:59,630 --> 00:46:03,110
all of you to do and I'm not sure if

920
00:46:01,160 --> 00:46:05,030
anybody has ever taken this advice but I

921
00:46:03,110 --> 00:46:08,360
say it every year anyway because I

922
00:46:05,030 --> 00:46:10,700
believe it but I think a really good

923
00:46:08,360 --> 00:46:12,710
strategy for studying and preparing for

924
00:46:10,700 --> 00:46:17,330
this course would be to read each

925
00:46:12,710 --> 00:46:20,540
chapter three times okay read it three

926
00:46:17,330 --> 00:46:21,830
times work the practice problem so we

927
00:46:20,540 --> 00:46:23,690
have littered throughout the book or

928
00:46:21,830 --> 00:46:26,090
practice problems with solutions at the

929
00:46:23,690 --> 00:46:27,800
end of the the end of the chapter and

930
00:46:26,090 --> 00:46:29,720
these practice problems are like little

931
00:46:27,800 --> 00:46:33,020
sort of bite-size morsels just to kind

932
00:46:29,720 --> 00:46:34,820
of just to kind of check your kind of

933
00:46:33,020 --> 00:46:37,460
sanity check of your understanding of

934
00:46:34,820 --> 00:46:38,960
the material so I think if you've read

935
00:46:37,460 --> 00:46:40,730
this if you read the book

936
00:46:38,960 --> 00:46:42,530
each chapter three times and work the

937
00:46:40,730 --> 00:46:46,550
practice problems you it that would be

938
00:46:42,530 --> 00:46:50,000
an excellent way to go through the

939
00:46:46,550 --> 00:46:52,790
semester and prepare the other book we

940
00:46:50,000 --> 00:46:58,580
use is the Colonel Hannon Richie's

941
00:46:52,790 --> 00:46:59,720
classic C programming book I think this

942
00:46:58,580 --> 00:47:02,930
is still this was written a long time

943
00:46:59,720 --> 00:47:05,410
ago it's still the best book around I

944
00:47:02,930 --> 00:47:08,300
think for C it's a it's a beautiful

945
00:47:05,410 --> 00:47:10,520
example of technical writing it was one

946
00:47:08,300 --> 00:47:12,590
of the inspirations I used when I was

947
00:47:10,520 --> 00:47:15,980
writing the book you know I tried to

948
00:47:12,590 --> 00:47:21,760
find that same clarity and precision

949
00:47:15,980 --> 00:47:21,760
that they that they turn hand and ricci

950
00:47:22,090 --> 00:47:26,870
have in their book so this is a this is

951
00:47:25,310 --> 00:47:28,640
a really good book I mean this is kind

952
00:47:26,870 --> 00:47:30,050
of book it's a reference but it's a kind

953
00:47:28,640 --> 00:47:31,940
of book you can just read from beginning

954
00:47:30,050 --> 00:47:33,160
to end and get a really good

955
00:47:31,940 --> 00:47:40,119
understanding of

956
00:47:33,160 --> 00:47:41,559
see there's a there's four main

957
00:47:40,119 --> 00:47:43,390
components to the course there's

958
00:47:41,559 --> 00:47:47,849
lectures where we go over the high-level

959
00:47:43,390 --> 00:47:52,240
concepts recitations where which meet

960
00:47:47,849 --> 00:47:54,460
once a week for an hour led by a TA and

961
00:47:52,240 --> 00:47:57,039
the purpose of the recitations is really

962
00:47:54,460 --> 00:48:00,180
to help you with the labs right so it's

963
00:47:57,039 --> 00:48:02,920
very practical and hands-on there's

964
00:48:00,180 --> 00:48:04,900
there's seven of those labs and these

965
00:48:02,920 --> 00:48:07,480
are really the heart and soul of the

966
00:48:04,900 --> 00:48:09,460
course this is where this is where all

967
00:48:07,480 --> 00:48:12,130
the real learning comes in I think when

968
00:48:09,460 --> 00:48:13,990
you actually have to do this stuff and

969
00:48:12,130 --> 00:48:16,890
that's why we take the cheating part so

970
00:48:13,990 --> 00:48:19,059
seriously because if you do these labs

971
00:48:16,890 --> 00:48:22,089
you're going to learn an incredible

972
00:48:19,059 --> 00:48:26,650
amount of really cool stuff if you don't

973
00:48:22,089 --> 00:48:29,170
do them you won't learn anything so each

974
00:48:26,650 --> 00:48:34,480
one of these these labs is one or two

975
00:48:29,170 --> 00:48:36,150
weeks each and involves typically some

976
00:48:34,480 --> 00:48:38,799
kind of programming or measurement

977
00:48:36,150 --> 00:48:43,950
there's also two exams a midterm and a

978
00:48:38,799 --> 00:48:49,960
final the the exams are proctored

979
00:48:43,950 --> 00:48:52,930
they're online proctored in Wien and and

980
00:48:49,960 --> 00:48:55,900
gates and what we do for the exams is we

981
00:48:52,930 --> 00:48:57,460
have like we take like four days from

982
00:48:55,900 --> 00:48:59,200
10:00 to 10:00 and then you can sign up

983
00:48:57,460 --> 00:49:01,660
and then we have like multiple clusters

984
00:48:59,200 --> 00:49:04,210
that are Network isolated and then you

985
00:49:01,660 --> 00:49:07,599
can sign up for a slot like a 6-hour

986
00:49:04,210 --> 00:49:08,349
slot and the midterm is like nominally

987
00:49:07,599 --> 00:49:10,599
like an hour

988
00:49:08,349 --> 00:49:12,760
eighty minute exam that's the same exam

989
00:49:10,599 --> 00:49:15,609
where you we gave when we used to have

990
00:49:12,760 --> 00:49:17,260
people sitting in person so it's

991
00:49:15,609 --> 00:49:20,140
nominally like 80 minutes but we give

992
00:49:17,260 --> 00:49:24,279
you like a five or six hour window to do

993
00:49:20,140 --> 00:49:26,500
it okay so there's so you can sign up

994
00:49:24,279 --> 00:49:28,539
any time any day that there's a slot

995
00:49:26,500 --> 00:49:30,609
okay so there's flexibilities that can

996
00:49:28,539 --> 00:49:32,980
kind of tailor it to your your schedule

997
00:49:30,609 --> 00:49:35,740
and we I think we've also removed all

998
00:49:32,980 --> 00:49:37,510
the time pressure right so which is you

999
00:49:35,740 --> 00:49:39,309
can you can go back you can check your

1000
00:49:37,510 --> 00:49:43,970
work you can you can just kind of relax

1001
00:49:39,309 --> 00:49:51,770
and not not not be worried about

1002
00:49:43,970 --> 00:49:54,109
how quickly you do it now there's many

1003
00:49:51,770 --> 00:49:55,609
different ways to get help the main

1004
00:49:54,109 --> 00:50:03,140
source of information is the course

1005
00:49:55,609 --> 00:50:05,810
webpage that's a WWF CMU edu Tildy 213

1006
00:50:03,140 --> 00:50:07,790
and all the information is there we've

1007
00:50:05,810 --> 00:50:10,640
got a complete schedule of lectures and

1008
00:50:07,790 --> 00:50:12,859
assignments we don't change it that it's

1009
00:50:10,640 --> 00:50:15,470
fixed it so you can look at that and and

1010
00:50:12,859 --> 00:50:17,930
plan your semester knowing that those

1011
00:50:15,470 --> 00:50:19,609
dates of won't change we've actually

1012
00:50:17,930 --> 00:50:23,540
even got all of the lectures posted

1013
00:50:19,609 --> 00:50:24,920
ahead of time for for the other

1014
00:50:23,540 --> 00:50:26,359
instructors around the world who are

1015
00:50:24,920 --> 00:50:31,940
using the book so we needed to get them

1016
00:50:26,359 --> 00:50:33,619
all already there's also news at at the

1017
00:50:31,940 --> 00:50:36,410
very beginning there's sort of news if

1018
00:50:33,619 --> 00:50:37,119
we need to make announcements we'll post

1019
00:50:36,410 --> 00:50:39,320
it there

1020
00:50:37,119 --> 00:50:45,640
we don't use either blackboard our

1021
00:50:39,320 --> 00:50:49,910
Piazza in the course instead we have a

1022
00:50:45,640 --> 00:50:51,980
staff mailing list that you can that you

1023
00:50:49,910 --> 00:50:54,260
can send mail to if you have questions

1024
00:50:51,980 --> 00:50:57,680
and all of the TAS and all of the

1025
00:50:54,260 --> 00:51:00,849
faculty are subscribed to that staff

1026
00:50:57,680 --> 00:51:03,619
mailing list and so we'll all see it and

1027
00:51:00,849 --> 00:51:05,960
we usually we try to have you know

1028
00:51:03,619 --> 00:51:09,640
really fast feedback right so there's so

1029
00:51:05,960 --> 00:51:12,349
many people so many people looking at

1030
00:51:09,640 --> 00:51:15,160
your emails that chance is very high

1031
00:51:12,349 --> 00:51:17,720
you'll get an answer back quickly the

1032
00:51:15,160 --> 00:51:19,280
disadvantage of having this advantage of

1033
00:51:17,720 --> 00:51:23,660
this mailing list is that it allows us

1034
00:51:19,280 --> 00:51:25,640
to control the message and control what

1035
00:51:23,660 --> 00:51:28,400
we're it's what feedback we're giving

1036
00:51:25,640 --> 00:51:30,530
back to you the disadvantage is that we

1037
00:51:28,400 --> 00:51:32,780
often get the same question over and

1038
00:51:30,530 --> 00:51:34,580
over again and so for that we've

1039
00:51:32,780 --> 00:51:36,890
established a FAQ if we find we're

1040
00:51:34,580 --> 00:51:39,800
getting same questions over and over

1041
00:51:36,890 --> 00:51:43,369
we've established a FAQ on the on the

1042
00:51:39,800 --> 00:51:46,720
course web page for sort of organized by

1043
00:51:43,369 --> 00:51:49,210
labs ok so you can you can see the

1044
00:51:46,720 --> 00:51:50,360
answers to frequently asked questions on

1045
00:51:49,210 --> 00:51:55,310
the

1046
00:51:50,360 --> 00:51:57,290
there we have office hours I think we're

1047
00:51:55,310 --> 00:52:00,140
still trying to eat we we're still

1048
00:51:57,290 --> 00:52:01,990
trying to meet with the staff and figure

1049
00:52:00,140 --> 00:52:04,040
out the exact office hours but what I'm

1050
00:52:01,990 --> 00:52:05,870
what we're thinking now is that we'll

1051
00:52:04,040 --> 00:52:09,280
have office hours so six days a week

1052
00:52:05,870 --> 00:52:11,960
okay every day that's Saturday

1053
00:52:09,280 --> 00:52:15,610
the they will be at the same time in

1054
00:52:11,960 --> 00:52:23,620
same place every day so from 5:45

1055
00:52:15,610 --> 00:52:28,160
to 8:30 in wean in a queen 5207 cluster

1056
00:52:23,620 --> 00:52:30,440
will have 213 TAS there to to help to

1057
00:52:28,160 --> 00:52:33,530
answer your questions okay so you don't

1058
00:52:30,440 --> 00:52:35,090
have to make appointments I mean you can

1059
00:52:33,530 --> 00:52:38,120
make an appointment to see any staff

1060
00:52:35,090 --> 00:52:39,680
member of course but you don't you you

1061
00:52:38,120 --> 00:52:41,330
know that at the same time same place

1062
00:52:39,680 --> 00:52:49,130
every day there's somebody you can go to

1063
00:52:41,330 --> 00:52:52,280
for help okay for our labs and exams

1064
00:52:49,130 --> 00:52:53,480
every assignment every lab is a single

1065
00:52:52,280 --> 00:52:56,420
person so we don't have any group

1066
00:52:53,480 --> 00:52:58,250
projects we want you to do the work

1067
00:52:56,420 --> 00:53:00,500
yourself now you know it's important to

1068
00:52:58,250 --> 00:53:03,830
work in groups and you will learn how to

1069
00:53:00,500 --> 00:53:05,990
work in groups and other classes see us

1070
00:53:03,830 --> 00:53:07,610
classes but not NC 13 we want this is a

1071
00:53:05,990 --> 00:53:11,360
kind of a core course we want you to

1072
00:53:07,610 --> 00:53:13,700
figure stuff out yourself all of our

1073
00:53:11,360 --> 00:53:15,770
hand ends will be due at 11:59 p.m. on

1074
00:53:13,700 --> 00:53:18,470
either a Tuesday or Thursday and this is

1075
00:53:15,770 --> 00:53:21,920
you can see which on the schedule page

1076
00:53:18,470 --> 00:53:27,740
on the course webpage and all of our

1077
00:53:21,920 --> 00:53:28,760
hand ins are using Auto lab where you

1078
00:53:27,740 --> 00:53:31,400
know you've probably used it for some of

1079
00:53:28,760 --> 00:53:33,290
your other classes but it's a it's a

1080
00:53:31,400 --> 00:53:35,930
Auto grading service that allows you to

1081
00:53:33,290 --> 00:53:37,310
get instant feedback on your on your on

1082
00:53:35,930 --> 00:53:41,540
your hand in so when you hand it in you

1083
00:53:37,310 --> 00:53:42,890
get feedback right away the exams like I

1084
00:53:41,540 --> 00:53:45,230
mentioned are going to be a network

1085
00:53:42,890 --> 00:53:48,340
isolated clusters held over multiple

1086
00:53:45,230 --> 00:53:51,740
days and and you can just sign up for a

1087
00:53:48,340 --> 00:53:54,460
slot that's available now what usually

1088
00:53:51,740 --> 00:53:56,510
happens is if we offer like the exam

1089
00:53:54,460 --> 00:54:00,370
Tuesday Wednesday and Thursday the

1090
00:53:56,510 --> 00:54:00,370
Thursday slot still up immediately

1091
00:54:00,500 --> 00:54:07,369
and so you know I guess I should try to

1092
00:54:05,420 --> 00:54:09,410
try to sign up soon if you want but

1093
00:54:07,369 --> 00:54:12,080
people always seem to want to defer to

1094
00:54:09,410 --> 00:54:16,310
the end rather than and this is me I'd

1095
00:54:12,080 --> 00:54:18,380
want to get it over with but so I just

1096
00:54:16,310 --> 00:54:21,020
thought that is sort of a constraint

1097
00:54:18,380 --> 00:54:26,170
right that if you can only sign up for

1098
00:54:21,020 --> 00:54:28,910
slots that that are available okay now

1099
00:54:26,170 --> 00:54:30,440
you know we make mistakes there's we

1100
00:54:28,910 --> 00:54:33,650
always make mistakes especially with

1101
00:54:30,440 --> 00:54:37,760
just so many students so we there's a

1102
00:54:33,650 --> 00:54:39,920
there's a specific process for appealing

1103
00:54:37,760 --> 00:54:42,770
grades if you think that there was a

1104
00:54:39,920 --> 00:54:45,980
that you're the work wasn't graded

1105
00:54:42,770 --> 00:54:49,040
properly so what you do after after

1106
00:54:45,980 --> 00:54:52,430
either an exam or after your labs are

1107
00:54:49,040 --> 00:54:56,090
graded you have 7 days to file an appeal

1108
00:54:52,430 --> 00:54:59,119
and appeals have to be in in writing and

1109
00:54:56,090 --> 00:55:01,580
hardcopy okay so there's no we won't we

1110
00:54:59,119 --> 00:55:04,430
won't we won't consider any email any

1111
00:55:01,580 --> 00:55:07,099
appeals via email it has to be in

1112
00:55:04,430 --> 00:55:09,170
writing and hardcopy and you give those

1113
00:55:07,099 --> 00:55:13,250
to me and if I'm not there you can just

1114
00:55:09,170 --> 00:55:14,990
slide it under the desk ok and what the

1115
00:55:13,250 --> 00:55:19,369
reason we do it that way is it allows us

1116
00:55:14,990 --> 00:55:22,730
to treat everybody fairly so we get all

1117
00:55:19,369 --> 00:55:24,680
the appeals together at once and then we

1118
00:55:22,730 --> 00:55:27,170
can we can we can treat everybody the

1119
00:55:24,680 --> 00:55:31,150
same way rather than just sort of doing

1120
00:55:27,170 --> 00:55:31,150
them one at a time like that ok

1121
00:55:33,039 --> 00:55:40,519
now for our labs we have ten machines

1122
00:55:37,849 --> 00:55:43,339
that were donated by Intel called the

1123
00:55:40,519 --> 00:55:47,900
shark machines so initially our first

1124
00:55:43,339 --> 00:55:50,630
version of t 13 and I guess we started

1125
00:55:47,900 --> 00:55:54,559
using Intel machines in 1999 we used to

1126
00:55:50,630 --> 00:55:57,710
alpha processors for the first year I

1127
00:55:54,559 --> 00:55:59,180
like to fish so all of our machines were

1128
00:55:57,710 --> 00:56:02,599
they were called the fish machines right

1129
00:55:59,180 --> 00:56:04,460
they were freshwater fish and then we

1130
00:56:02,599 --> 00:56:06,380
upgraded a few years after that and

1131
00:56:04,460 --> 00:56:10,849
those were the saltwater fish machines

1132
00:56:06,380 --> 00:56:14,029
and then we upgraded like in 2011 to

1133
00:56:10,849 --> 00:56:16,160
these Nehalem class servers and run out

1134
00:56:14,029 --> 00:56:19,940
of fresh water fish and saltwater fish

1135
00:56:16,160 --> 00:56:22,309
so the next grade up was sharks right so

1136
00:56:19,940 --> 00:56:25,249
every fish is it's named after some kind

1137
00:56:22,309 --> 00:56:28,640
of shark but these are the same machines

1138
00:56:25,249 --> 00:56:29,660
that that you'll that auto lab uses for

1139
00:56:28,640 --> 00:56:33,529
grading right so there's some

1140
00:56:29,660 --> 00:56:37,220
consistency for performance-oriented

1141
00:56:33,529 --> 00:56:40,339
labs like malloc lab and you can access

1142
00:56:37,220 --> 00:56:42,349
them that they're you the names are

1143
00:56:40,339 --> 00:56:45,410
listed on the course webpage and so you

1144
00:56:42,349 --> 00:56:47,210
can SSH to a specific machine they're

1145
00:56:45,410 --> 00:56:48,619
all identical if you have an Andrew

1146
00:56:47,210 --> 00:56:49,789
account you've already got accounts on

1147
00:56:48,619 --> 00:56:52,789
the machines right so there's nothing

1148
00:56:49,789 --> 00:56:54,680
special to do or you can just SSH to

1149
00:56:52,789 --> 00:56:58,839
sharp got ICS and it'll just randomly

1150
00:56:54,680 --> 00:57:02,329
put you on on one of the shark machines

1151
00:56:58,839 --> 00:57:04,849
okay if if you have any trouble logging

1152
00:57:02,329 --> 00:57:10,700
in just send send mail to the staff

1153
00:57:04,849 --> 00:57:14,450
mailing list okay we know that during

1154
00:57:10,700 --> 00:57:19,359
the semester things come up grandparents

1155
00:57:14,450 --> 00:57:19,359
died especially near the near the final

1156
00:57:22,080 --> 00:57:27,570
that's harsh I know but that things come

1157
00:57:25,950 --> 00:57:29,820
up right and you've got your very busy

1158
00:57:27,570 --> 00:57:32,070
you're taking a lot of courses so

1159
00:57:29,820 --> 00:57:34,710
instead of sort of dealing with requests

1160
00:57:32,070 --> 00:57:37,500
for extensions and you know all these

1161
00:57:34,710 --> 00:57:41,520
special cases what we do is we give you

1162
00:57:37,500 --> 00:57:45,480
five Grace days that you can then spend

1163
00:57:41,520 --> 00:57:48,660
as you wish so if you hand your work in

1164
00:57:45,480 --> 00:57:51,780
late one day late you'll automatically

1165
00:57:48,660 --> 00:57:53,760
consume a great day okay we don't allow

1166
00:57:51,780 --> 00:57:56,160
you to sort of allocate the grace days

1167
00:57:53,760 --> 00:57:59,040
you spend one of your grades days by

1168
00:57:56,160 --> 00:58:00,630
handing in late so if you have a great

1169
00:57:59,040 --> 00:58:02,790
day less than you hand in late

1170
00:58:00,630 --> 00:58:04,640
you'll spend that great day but you

1171
00:58:02,790 --> 00:58:08,430
won't be penalized for the late hand in

1172
00:58:04,640 --> 00:58:14,220
and so we have five great days over the

1173
00:58:08,430 --> 00:58:17,460
entire semester and a maximum of two

1174
00:58:14,220 --> 00:58:19,410
great days for the assignments now we're

1175
00:58:17,460 --> 00:58:21,720
going to set up since the first three

1176
00:58:19,410 --> 00:58:24,870
assignments are kind of not as

1177
00:58:21,720 --> 00:58:27,330
programming intensive and don't take as

1178
00:58:24,870 --> 00:58:30,510
much time we're not going to allow any

1179
00:58:27,330 --> 00:58:33,780
great days for those because a one grace

1180
00:58:30,510 --> 00:58:36,600
day one sorry one great day and then for

1181
00:58:33,780 --> 00:58:37,950
the the latter four labs which are much

1182
00:58:36,600 --> 00:58:40,860
more intense we're going to allow you to

1183
00:58:37,950 --> 00:58:43,200
a max of two great states and the reason

1184
00:58:40,860 --> 00:58:44,700
we're doing this is because we don't

1185
00:58:43,200 --> 00:58:47,400
want you to burn you're good these great

1186
00:58:44,700 --> 00:58:48,900
days are valuable they're critical

1187
00:58:47,400 --> 00:58:54,720
especially later in the semester when

1188
00:58:48,900 --> 00:58:56,130
have you really really dizzy so we don't

1189
00:58:54,720 --> 00:58:58,200
want you to burn off your grace days

1190
00:58:56,130 --> 00:59:00,690
early in the semester and this happens

1191
00:58:58,200 --> 00:59:02,700
every semester and it's and then when

1192
00:59:00,690 --> 00:59:05,370
alec lab comes up there's no gray space

1193
00:59:02,700 --> 00:59:08,370
left and it's really it's really sad to

1194
00:59:05,370 --> 00:59:11,580
see that and so we're going to limit you

1195
00:59:08,370 --> 00:59:17,790
to one for those first three just to

1196
00:59:11,580 --> 00:59:22,920
help you save you from yourself now

1197
00:59:17,790 --> 00:59:24,480
it the the the nominal late penalty if

1198
00:59:22,920 --> 00:59:29,370
you don't have a great days fifteen

1199
00:59:24,480 --> 00:59:31,590
percent per day and we don't allow any

1200
00:59:29,370 --> 00:59:33,570
hand in three days after the due date at

1201
00:59:31,590 --> 00:59:38,520
all so that Auto live shuts off the min

1202
00:59:33,570 --> 00:59:41,100
and then that's it now if there's some

1203
00:59:38,520 --> 00:59:44,070
kind of catastrophic event you know then

1204
00:59:41,100 --> 00:59:46,680
you know please contact us for an

1205
00:59:44,070 --> 00:59:48,510
extension right so we're not you know we

1206
00:59:46,680 --> 00:59:52,800
try to be reasonable but most of the

1207
00:59:48,510 --> 00:59:54,480
most of the most of the reasons that for

1208
00:59:52,800 --> 01:00:00,780
requesting extensions you can handle

1209
00:59:54,480 --> 01:00:03,600
yourself using your grades days and just

1210
01:00:00,780 --> 01:00:08,160
I mean this is that this is advice that

1211
01:00:03,600 --> 01:00:10,830
give every semester to but I but it's

1212
01:00:08,160 --> 01:00:15,060
people often don't don't pay attention

1213
01:00:10,830 --> 01:00:16,920
but or just they're unable to but but

1214
01:00:15,060 --> 01:00:19,560
really for every one of these

1215
01:00:16,920 --> 01:00:21,540
assignments you want to start early and

1216
01:00:19,560 --> 01:00:24,620
the reason is you need to give yourself

1217
01:00:21,540 --> 01:00:27,150
time to to go seek help if you get stuck

1218
01:00:24,620 --> 01:00:28,890
because the nature of these very

1219
01:00:27,150 --> 01:00:30,510
programming intensive assignments like

1220
01:00:28,890 --> 01:00:33,420
we have in 213 is that you're going to

1221
01:00:30,510 --> 01:00:36,000
get stuck and and often it's very hard

1222
01:00:33,420 --> 01:00:38,640
to to bound the time you spend on on

1223
01:00:36,000 --> 01:00:40,110
some of these assignments you know it's

1224
01:00:38,640 --> 01:00:41,330
not like problem sets where you can kind

1225
01:00:40,110 --> 01:00:43,680
of predict you know this will take

1226
01:00:41,330 --> 01:00:46,590
there's no taking like three hours to do

1227
01:00:43,680 --> 01:00:49,260
these problem sets for a lot of the 213

1228
01:00:46,590 --> 01:00:50,820
assignments it's very difficult to to

1229
01:00:49,260 --> 01:00:52,710
sort of manage your time and bound your

1230
01:00:50,820 --> 01:00:54,750
time so for that reason you really want

1231
01:00:52,710 --> 01:00:59,070
to start early to give yourself a chance

1232
01:00:54,750 --> 01:01:02,430
to get help when you get stuck now in

1233
01:00:59,070 --> 01:01:09,050
the lecture hall of you're permitted to

1234
01:01:02,430 --> 01:01:12,090
have your laptop but we ask you not to

1235
01:01:09,050 --> 01:01:13,830
send email or instant messaging or cell

1236
01:01:12,090 --> 01:01:16,200
phone texting or anything like that if

1237
01:01:13,830 --> 01:01:20,560
you here we want you to to be attentive

1238
01:01:16,200 --> 01:01:22,900
and engaged the

1239
01:01:20,560 --> 01:01:25,150
your presence in lectures and

1240
01:01:22,900 --> 01:01:27,610
recitations is voluntary so we don't

1241
01:01:25,150 --> 01:01:30,310
take we don't take role at either of

1242
01:01:27,610 --> 01:01:33,580
those we encourage you to come but it's

1243
01:01:30,310 --> 01:01:37,530
not required and no recordings of any

1244
01:01:33,580 --> 01:01:37,530
kind except this one

1245
01:01:38,610 --> 01:01:46,180
okay the exams and labs are weighted

1246
01:01:41,290 --> 01:01:48,610
equally 50% midterms 20 finals 30 and

1247
01:01:46,180 --> 01:01:53,920
final grades are based on a straight 90

1248
01:01:48,610 --> 01:01:59,310
80 70 scale now rough outline of the

1249
01:01:53,920 --> 01:02:01,330
semester the first three labs cover

1250
01:01:59,310 --> 01:02:04,140
programs reference the Machine

1251
01:02:01,330 --> 01:02:06,790
representations of programs and data

1252
01:02:04,140 --> 01:02:09,430
data lab is how we teach you about fit

1253
01:02:06,790 --> 01:02:12,760
level representations of data so you'll

1254
01:02:09,430 --> 01:02:16,170
sell collection of puzzles and see like

1255
01:02:12,760 --> 01:02:18,250
a puzzle might be is a little function

1256
01:02:16,170 --> 01:02:20,320
that you have to implement and like

1257
01:02:18,250 --> 01:02:22,390
absolute value so a function that

1258
01:02:20,320 --> 01:02:25,810
returns the absolute value of its art

1259
01:02:22,390 --> 01:02:27,490
input argument the kicker is that we

1260
01:02:25,810 --> 01:02:29,110
restrict the set of operators that you

1261
01:02:27,490 --> 01:02:32,500
can use and it has to be straight line

1262
01:02:29,110 --> 01:02:34,690
code no conditionals or loops and so to

1263
01:02:32,500 --> 01:02:36,100
solve these puzzles so imagine how you

1264
01:02:34,690 --> 01:02:38,440
might try to solve absolute value

1265
01:02:36,100 --> 01:02:40,660
without using an if statement right the

1266
01:02:38,440 --> 01:02:46,500
normal way to do it would be if X less

1267
01:02:40,660 --> 01:02:46,500
than zero return x or negative x

1268
01:02:46,530 --> 01:02:52,870
see I told you we make mistakes but

1269
01:02:51,040 --> 01:02:54,910
imagine how you might do that without

1270
01:02:52,870 --> 01:02:57,730
using conditionals and only using bit

1271
01:02:54,910 --> 01:03:00,580
level C operations right so this is how

1272
01:02:57,730 --> 01:03:05,020
this is how this is our way of teaching

1273
01:03:00,580 --> 01:03:07,420
you how data is really represented in

1274
01:03:05,020 --> 01:03:10,390
the machine now the bomb lab which

1275
01:03:07,420 --> 01:03:12,820
you've probably heard at this is this is

1276
01:03:10,390 --> 01:03:17,500
a kind of famous all over the world now

1277
01:03:12,820 --> 01:03:20,350
and at CMU the bomb lab is the way we

1278
01:03:17,500 --> 01:03:24,490
teach you how to read and understand

1279
01:03:20,350 --> 01:03:28,120
assembly language and a bomb just

1280
01:03:24,490 --> 01:03:31,030
briefly a bomb is a is a C program that

1281
01:03:28,120 --> 01:03:34,030
consists of a collection of six phases

1282
01:03:31,030 --> 01:03:37,150
and each phase wants you to type

1283
01:03:34,030 --> 01:03:40,540
something in at the keyboard if you type

1284
01:03:37,150 --> 01:03:43,750
in the what it wants you to type what it

1285
01:03:40,540 --> 01:03:46,360
expects you to type then you've diffused

1286
01:03:43,750 --> 01:03:48,100
that phase and it goes to the next phase

1287
01:03:46,360 --> 01:03:51,100
then you have to type with that phase

1288
01:03:48,100 --> 01:03:54,520
once and if you defuse all the phases

1289
01:03:51,100 --> 01:03:56,950
then you've diffused the bomb however if

1290
01:03:54,520 --> 01:04:00,700
you type in the wrong thing then the

1291
01:03:56,950 --> 01:04:03,130
bomb explodes by printing boom and you

1292
01:04:00,700 --> 01:04:05,380
have to try it again and the kicker is

1293
01:04:03,130 --> 01:04:10,690
in either case when if you explode the

1294
01:04:05,380 --> 01:04:14,560
bomb or defuse a phase that information

1295
01:04:10,690 --> 01:04:16,570
gets sent to auto lab if you and we use

1296
01:04:14,560 --> 01:04:19,750
the defusing string that that your bomb

1297
01:04:16,570 --> 01:04:22,120
sends us and we check it out on a copy

1298
01:04:19,750 --> 01:04:24,640
of your bomb that we keep on the server

1299
01:04:22,120 --> 01:04:27,220
that's another thing every everybody

1300
01:04:24,640 --> 01:04:33,010
gets a different bomb slightly different

1301
01:04:27,220 --> 01:04:34,990
bomb so we check so when you defuse when

1302
01:04:33,010 --> 01:04:37,420
you just use the phase Auto lab takes

1303
01:04:34,990 --> 01:04:39,310
the string that it that your bomb sends

1304
01:04:37,420 --> 01:04:43,180
us and then compares against the local

1305
01:04:39,310 --> 01:04:46,510
copy of your bomb if you explode phase

1306
01:04:43,180 --> 01:04:48,190
you lose half a point so there's a real

1307
01:04:46,510 --> 01:04:51,150
consequence to exploding a bomb it's

1308
01:04:48,190 --> 01:04:51,150
very very tense

1309
01:04:52,369 --> 01:04:58,560
until you learn how to use GDB to set a

1310
01:04:55,560 --> 01:05:02,130
breakpoint before the function that

1311
01:04:58,560 --> 01:05:04,950
sends the information to the server and

1312
01:05:02,130 --> 01:05:07,470
we want you to do that right so a bombs

1313
01:05:04,950 --> 01:05:08,550
are really the bombs really beautiful

1314
01:05:07,470 --> 01:05:13,849
it's kind of fun it's kind of like a

1315
01:05:08,550 --> 01:05:18,869
video game it it teaches you how to read

1316
01:05:13,849 --> 01:05:21,240
compiler generated code because the only

1317
01:05:18,869 --> 01:05:22,589
oh the kicker is sorry the kicker is we

1318
01:05:21,240 --> 01:05:25,349
don't give you the source code all we

1319
01:05:22,589 --> 01:05:28,290
give you is the binary hence the binary

1320
01:05:25,349 --> 01:05:31,380
bomb so in order to defuse a bomb you've

1321
01:05:28,290 --> 01:05:33,030
got to fire up gdb single trace through

1322
01:05:31,380 --> 01:05:35,510
the find where the code is for each

1323
01:05:33,030 --> 01:05:37,980
phase single trace through that code and

1324
01:05:35,510 --> 01:05:41,280
sort of reverse engineer and figure out

1325
01:05:37,980 --> 01:05:43,260
what it wants you to type in and then

1326
01:05:41,280 --> 01:05:45,450
you'll quickly find out where that

1327
01:05:43,260 --> 01:05:48,869
function that explodes the bomb is and

1328
01:05:45,450 --> 01:05:51,570
you'll put a breakpoint there and so we

1329
01:05:48,869 --> 01:05:53,580
want you to do that because the bomb

1330
01:05:51,570 --> 01:05:55,890
besides teaching you how to program

1331
01:05:53,580 --> 01:05:57,630
assembly language it also teaches you

1332
01:05:55,890 --> 01:05:59,490
sort of organically how to use gdb

1333
01:05:57,630 --> 01:06:04,440
because you really can't do it if you

1334
01:05:59,490 --> 01:06:07,200
don't use if you don't run gdb and then

1335
01:06:04,440 --> 01:06:10,080
the the third lab is this is a new lab

1336
01:06:07,200 --> 01:06:13,920
the semester the Randy's developed

1337
01:06:10,080 --> 01:06:16,320
called the attack lab and we developed

1338
01:06:13,920 --> 01:06:18,270
this lab specifically for 64-bit

1339
01:06:16,320 --> 01:06:22,320
architecture so this is a reflection of

1340
01:06:18,270 --> 01:06:24,570
the change from 32 bits to 64 bits and

1341
01:06:22,320 --> 01:06:28,020
this is really excited about this one

1342
01:06:24,570 --> 01:06:33,330
you'll learn how to you'll learn how to

1343
01:06:28,020 --> 01:06:35,280
write exploits using return to a sort of

1344
01:06:33,330 --> 01:06:37,470
a modern technique called return to

1345
01:06:35,280 --> 01:06:39,630
return oriented programming which is

1346
01:06:37,470 --> 01:06:41,550
kind of the modern modern way that

1347
01:06:39,630 --> 01:06:48,150
hackers deal with the fact that stacks

1348
01:06:41,550 --> 01:06:52,260
in newer machines move around and and

1349
01:06:48,150 --> 01:06:54,839
are prohibitive and make an impossible

1350
01:06:52,260 --> 01:06:56,609
to execute code on the on the stack so

1351
01:06:54,839 --> 01:06:58,770
this the brand new labs really I think

1352
01:06:56,609 --> 01:07:01,040
it's really going to be really going to

1353
01:06:58,770 --> 01:07:01,040
be neat

1354
01:07:01,759 --> 01:07:06,109
in the memory hierarchy when we study

1355
01:07:04,130 --> 01:07:09,109
the memory hierarchy we we have a cash

1356
01:07:06,109 --> 01:07:10,999
lab called the cash lab where you'll

1357
01:07:09,109 --> 01:07:14,650
build your own cash simulator so this is

1358
01:07:10,999 --> 01:07:16,970
how you sort of learn how this hardware

1359
01:07:14,650 --> 01:07:19,220
that Randy was mentioning called it

1360
01:07:16,970 --> 01:07:21,680
cache memory works you'll build a

1361
01:07:19,220 --> 01:07:24,249
simulator and see for that and then

1362
01:07:21,680 --> 01:07:26,989
you'll take a small transpose function

1363
01:07:24,249 --> 01:07:29,539
and you'll try to make that that code

1364
01:07:26,989 --> 01:07:32,059
run with as few misses as possible on

1365
01:07:29,539 --> 01:07:34,430
your simulator and this will involve

1366
01:07:32,059 --> 01:07:38,799
sort of understanding of how the memory

1367
01:07:34,430 --> 01:07:38,799
hierarchy works and how to exploit it

1368
01:07:40,569 --> 01:07:46,390
the part of the course where you we sort

1369
01:07:43,970 --> 01:07:49,489
of transitioned from hardware to

1370
01:07:46,390 --> 01:07:52,849
interacting with the the system software

1371
01:07:49,489 --> 01:07:56,299
that the operating system there's sort

1372
01:07:52,849 --> 01:07:59,960
of a concept that we call exceptional

1373
01:07:56,299 --> 01:08:02,509
control flaws that exists in all parts

1374
01:07:59,960 --> 01:08:05,150
of the system and it sort of represents

1375
01:08:02,509 --> 01:08:09,829
that intellectual transition from

1376
01:08:05,150 --> 01:08:11,779
hardware to software so this is how this

1377
01:08:09,829 --> 01:08:14,450
was sort of a key idea that allowed us

1378
01:08:11,779 --> 01:08:17,000
to kind of smoothly move from from

1379
01:08:14,450 --> 01:08:20,029
hardware to software in some

1380
01:08:17,000 --> 01:08:22,040
intellectually consistent way and so the

1381
01:08:20,029 --> 01:08:24,199
the ideas that you cover an exceptional

1382
01:08:22,040 --> 01:08:26,480
control floor like low hard low-level

1383
01:08:24,199 --> 01:08:29,270
hardware interrupts and exceptions and

1384
01:08:26,480 --> 01:08:30,889
then at the higher level sort of

1385
01:08:29,270 --> 01:08:33,500
involving hardware and operating system

1386
01:08:30,889 --> 01:08:36,560
software is the idea of an opera of the

1387
01:08:33,500 --> 01:08:38,659
process context switch ok so this is

1388
01:08:36,560 --> 01:08:42,500
this is where you start to learn what

1389
01:08:38,659 --> 01:08:45,589
processes are and how to how to ask the

1390
01:08:42,500 --> 01:08:48,040
kernel to create in manage processes for

1391
01:08:45,589 --> 01:08:50,389
you at the next higher level or a

1392
01:08:48,040 --> 01:08:53,000
software form of exceptional control

1393
01:08:50,389 --> 01:08:55,609
flow called a signal so this exists

1394
01:08:53,000 --> 01:08:58,909
solely on the Linux kernel and then and

1395
01:08:55,609 --> 01:09:01,369
then even at a higher level at there's

1396
01:08:58,909 --> 01:09:03,859
an application C language version of

1397
01:09:01,369 --> 01:09:07,339
exceptional control flow call set jump

1398
01:09:03,859 --> 01:09:09,139
and long jump so this this notion of

1399
01:09:07,339 --> 01:09:11,029
exceptional control flow kind of exists

1400
01:09:09,139 --> 01:09:12,359
in all parts of the system we covered

1401
01:09:11,029 --> 01:09:16,889
all at once

1402
01:09:12,359 --> 01:09:20,460
and the lab that we use to sort of

1403
01:09:16,889 --> 01:09:22,739
exercise all these ideas is called the

1404
01:09:20,460 --> 01:09:25,230
shell lab and in the shell lab you'll

1405
01:09:22,739 --> 01:09:27,059
write your own linux shell which is

1406
01:09:25,230 --> 01:09:28,799
really cool so that's the program the

1407
01:09:27,059 --> 01:09:31,489
command line program that you interact

1408
01:09:28,799 --> 01:09:36,270
with whenever you log into a Linux box

1409
01:09:31,489 --> 01:09:37,230
you're going to write your own and I

1410
01:09:36,270 --> 01:09:39,540
don't look for me that was really

1411
01:09:37,230 --> 01:09:41,159
exciting when I could like write

1412
01:09:39,540 --> 01:09:47,250
something that looked like a real shell

1413
01:09:41,159 --> 01:09:50,969
it was pretty neat the next area is well

1414
01:09:47,250 --> 01:09:53,159
study is called virtual memory virtual

1415
01:09:50,969 --> 01:09:55,920
memory is a sort of combination of

1416
01:09:53,159 --> 01:09:58,650
hardware and software that presents an

1417
01:09:55,920 --> 01:10:02,179
abstraction to you of this variant of

1418
01:09:58,650 --> 01:10:05,360
memory is a very large array of bytes

1419
01:10:02,179 --> 01:10:08,429
when in reality memory is a hierarchy of

1420
01:10:05,360 --> 01:10:11,550
hardware and of cache memories and D

1421
01:10:08,429 --> 01:10:13,800
Rams virtual memory provides a very

1422
01:10:11,550 --> 01:10:16,469
high-level abstraction and as just a

1423
01:10:13,800 --> 01:10:19,199
linear sequence of bytes it also does

1424
01:10:16,469 --> 01:10:21,150
provide a lot of a lot of other useful

1425
01:10:19,199 --> 01:10:23,460
abstractions that make many different

1426
01:10:21,150 --> 01:10:23,849
parts of the system much easier to

1427
01:10:23,460 --> 01:10:26,550
manage

1428
01:10:23,849 --> 01:10:30,420
ok so we'll learn we learn about virtual

1429
01:10:26,550 --> 01:10:32,400
memory we'll learn how it works we'll

1430
01:10:30,420 --> 01:10:34,290
learn about the performance impact

1431
01:10:32,400 --> 01:10:37,559
potential performance impact that it has

1432
01:10:34,290 --> 01:10:40,199
on your programs and and we'll also

1433
01:10:37,559 --> 01:10:42,449
learn how to manage that large pool of

1434
01:10:40,199 --> 01:10:45,809
memory that it makes available to you

1435
01:10:42,449 --> 01:10:47,369
and the lab that we do that the lab

1436
01:10:45,809 --> 01:10:49,829
where you'll do that is called malloc

1437
01:10:47,369 --> 01:10:53,760
lab and in the malloc lab you'll write

1438
01:10:49,829 --> 01:10:55,800
your own malloc and free functions ok so

1439
01:10:53,760 --> 01:10:59,369
you'll you'll reinvent the functionality

1440
01:10:55,800 --> 01:11:05,309
of the Lib C malloc and free and this is

1441
01:10:59,369 --> 01:11:08,099
a maybe a minute maybe it's two pages of

1442
01:11:05,309 --> 01:11:12,300
code but it'll be a guarantee it'll be

1443
01:11:08,099 --> 01:11:15,780
the most sophisticated difficult two

1444
01:11:12,300 --> 01:11:17,969
pages of code you've written not only

1445
01:11:15,780 --> 01:11:21,119
because since it's managing the memory

1446
01:11:17,969 --> 01:11:23,520
system you can't use all of I mean C

1447
01:11:21,119 --> 01:11:25,199
doesn't have many C doesn't help you out

1448
01:11:23,520 --> 01:11:28,650
a lot

1449
01:11:25,199 --> 01:11:30,719
with extractions for data structures but

1450
01:11:28,650 --> 01:11:34,020
when you're writing but at least it does

1451
01:11:30,719 --> 01:11:36,179
give you ideas like strux unions that

1452
01:11:34,020 --> 01:11:38,219
you can use to structure your memory

1453
01:11:36,179 --> 01:11:40,639
when you're writing a malloc package you

1454
01:11:38,219 --> 01:11:43,130
can't use any of those you have to ride

1455
01:11:40,639 --> 01:11:46,409
exclusively on pointers and casting

1456
01:11:43,130 --> 01:11:50,190
because you malloc tax is working at

1457
01:11:46,409 --> 01:11:53,849
such a low level and so it's a very very

1458
01:11:50,190 --> 01:11:55,889
difficult piece of code for that reason

1459
01:11:53,849 --> 01:11:58,739
but also the design space for malloc is

1460
01:11:55,889 --> 01:12:00,750
is enormous you have many options

1461
01:11:58,739 --> 01:12:03,900
they all have implications that

1462
01:12:00,750 --> 01:12:09,449
trade-off performance and a memory

1463
01:12:03,900 --> 01:12:14,270
efficiency and finally in the last part

1464
01:12:09,449 --> 01:12:16,980
of the course we deal with i/o

1465
01:12:14,270 --> 01:12:18,540
input/output so so far in the course

1466
01:12:16,980 --> 01:12:21,810
we've just talked about sort of running

1467
01:12:18,540 --> 01:12:23,670
programs on machines in the last part of

1468
01:12:21,810 --> 01:12:27,119
the course we'll talk about input and

1469
01:12:23,670 --> 01:12:30,119
output sending data into and out of the

1470
01:12:27,119 --> 01:12:35,489
machine so we'll look at basic concepts

1471
01:12:30,119 --> 01:12:37,290
of Linux i/o will and since I think the

1472
01:12:35,489 --> 01:12:39,360
most interesting form of i/o is is

1473
01:12:37,290 --> 01:12:41,969
networking which allows you to talk to

1474
01:12:39,360 --> 01:12:44,790
machines anywhere in the world

1475
01:12:41,969 --> 01:12:46,170
using the internet we'll also talk we'll

1476
01:12:44,790 --> 01:12:48,889
learn how to do network programming

1477
01:12:46,170 --> 01:12:53,340
you'll learn how to write programs that

1478
01:12:48,889 --> 01:12:56,040
use the sockets interface which is the

1479
01:12:53,340 --> 01:12:57,929
basic interface for the Internet to talk

1480
01:12:56,040 --> 01:13:00,810
to machines any potentially any machine

1481
01:12:57,929 --> 01:13:03,090
in the in the world and that's really

1482
01:13:00,810 --> 01:13:05,400
exciting I mean once I can still

1483
01:13:03,090 --> 01:13:07,889
remember when developing this course I

1484
01:13:05,400 --> 01:13:10,380
had two windows open on my machine

1485
01:13:07,889 --> 01:13:12,570
I was SSH into two different machines

1486
01:13:10,380 --> 01:13:15,000
and I wrote a program to send a message

1487
01:13:12,570 --> 01:13:17,520
like hello world from one machine to the

1488
01:13:15,000 --> 01:13:20,219
other and when that hello world appeared

1489
01:13:17,520 --> 01:13:22,230
on the second windows like so exciting I

1490
01:13:20,219 --> 01:13:25,010
mean if you're a nerd it's really

1491
01:13:22,230 --> 01:13:28,080
exciting but

1492
01:13:25,010 --> 01:13:30,660
but just the thought that that could

1493
01:13:28,080 --> 01:13:32,010
have been at any machine right that

1494
01:13:30,660 --> 01:13:36,140
could have been any machine that does

1495
01:13:32,010 --> 01:13:36,140
just like opens up a whole new world

1496
01:13:39,140 --> 01:13:45,540
okay all of our all of our hands are

1497
01:13:43,110 --> 01:13:49,320
using a system called Auto lab which was

1498
01:13:45,540 --> 01:13:52,320
developed here and you can access it if

1499
01:13:49,320 --> 01:13:54,960
you if you are on the roster as of this

1500
01:13:52,320 --> 01:13:57,540
morning if you go to the Auto lab link

1501
01:13:54,960 --> 01:14:01,050
then you'll see this course was based on

1502
01:13:57,540 --> 01:14:04,050
your page if you're not enrolled you

1503
01:14:01,050 --> 01:14:05,550
won't have an auto lab account and you

1504
01:14:04,050 --> 01:14:08,969
have to be enrolled to get an auto lab

1505
01:14:05,550 --> 01:14:11,310
account so if you if you want to try to

1506
01:14:08,969 --> 01:14:13,949
wait it out and wait for people to drop

1507
01:14:11,310 --> 01:14:15,780
I'll make the first couple of elite the

1508
01:14:13,949 --> 01:14:17,730
first assignment due available from the

1509
01:14:15,780 --> 01:14:20,250
course web page so you can work on it

1510
01:14:17,730 --> 01:14:27,870
without actually handing into Auto lab

1511
01:14:20,250 --> 01:14:29,310
but at least you can keep going okay if

1512
01:14:27,870 --> 01:14:31,320
you enroll actually I didn't update this

1513
01:14:29,310 --> 01:14:35,610
but I updated the Auto lab accounts

1514
01:14:31,320 --> 01:14:39,570
today now one final thing if you have

1515
01:14:35,610 --> 01:14:41,670
waitlist questions please don't don't

1516
01:14:39,570 --> 01:14:45,660
send email to the staff because we don't

1517
01:14:41,670 --> 01:14:48,630
control the waiver so you should contact

1518
01:14:45,660 --> 01:14:52,610
one of these either Cathy Catherine or

1519
01:14:48,630 --> 01:14:55,100
Zahra depending on which class you had

1520
01:14:52,610 --> 01:14:57,540
okay so that's that welcome again

1521
01:14:55,100 --> 01:15:01,070
looking forward to a great semester and

1522
01:14:57,540 --> 01:15:01,070
we'll see you on Thursday

