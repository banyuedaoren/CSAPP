                            | # This is a y86-64 Assembly code written by fanesemyk, as Part A of CSAPP archlab
                            | 
0x000:                      | 		.pos 0
0x000: 30f40004000000000000 | 		irmovq stack, %rsp
0x00a: 807f00000000000000   | 		call main
0x013: 00                   | 		halt
                            | 
                            | # Sample linked list
                            | 
0x018:                      | 		.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 		.quad 0x00a
0x020: 2800000000000000     | 		.quad e1e2
0x028:                      | e1e2:
0x028: b000000000000000     | 		.quad 0x0b0
0x030: 3800000000000000     | 		.quad e1e3
0x038:                      | e1e3:
0x038: 000c000000000000     | 		.quad 0xc00
0x040: 0000000000000000     | 		.quad 0
                            | 
                            | # long sum_list(list_ptr ls)
                            | # ls stored in %rdi
                            | 
0x048:                      | sum_list:
0x048: 30f00000000000000000 | 		irmovq $0, %rax
0x052: 707300000000000000   | 		jmp loop1
0x05b:                      | loop:
0x05b: 50670000000000000000 | 		mrmovq 0(%rdi), %rsi
0x065: 6060                 | 		addq %rsi, %rax
0x067: 50670800000000000000 | 		mrmovq 8(%rdi), %rsi
0x071: 2067                 | 		rrmovq %rsi, %rdi
0x073:                      | loop1:
0x073: 6277                 | 		andq %rdi, %rdi
0x075: 745b00000000000000   | 		jne loop
0x07e: 90                   | 		ret
                            | 
0x07f:                      | main:
0x07f: 30f71800000000000000 | 		irmovq ele1, %rdi
0x089: 804800000000000000   | 		call sum_list
0x092: 90                   | 		ret
                            | 
0x400:                      | 		.pos 0x400
0x400:                      | stack:
